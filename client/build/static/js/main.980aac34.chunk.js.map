{"version":3,"sources":["auth/auth-request-api/index.js","auth/index.js","common/jsTPS.js","store/store-request-api/index.js","transactions/CreateSong_Transaction.js","transactions/MoveSong_Transaction.js","transactions/RemoveSong_Transaction.js","transactions/UpdateSong_Transaction.js","store/index.js","Playlister.png","components/EditToolbar.js","components/AppBanner.js","components/SongCard.js","components/AddSongButton.js","components/MUIRemoveSongModal.js","components/MUIEditSongModal.js","components/MUIDeleteModal.js","components/MUIPlaylistExists.js","components/ListCard.js","components/MenuBar.js","components/SongCard2.js","components/ListCard2.js","components/AllPlaylists.js","components/ListCard3.js","components/UserPlaylists.js","components/YouTubePlayer.js","components/Comment.js","components/Comments.js","components/HomeScreen.js","components/SplashScreen.js","components/HomeWrapper.js","components/Copyright.js","components/MUIMessageError.js","components/LoginScreen.js","components/RegisterScreen.js","components/Statusbar.js","components/WorkspaceScreen.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","withCredentials","api","create","baseURL","apis","getLoggedIn","get","registerUser","username","firstName","lastName","email","password","passwordVerify","post","loginUser","logoutUser","AuthContext","createContext","console","log","AuthActionType","GET_LOGGED_IN","LOGIN_USER","LOGOUT_USER","REGISTER_USER","HIDE_ERROR_MODAL","DISPLAY_ERROR_MODAL","HOME","ALL_LISTS","USERS","GUEST","AuthContextProvider","props","useState","user","loggedIn","e","message","home","allLists","users","auth","setAuth","history","useHistory","useEffect","authReducer","action","type","payload","response","status","SET_LOGGED_IN","data","push","errorMessage","hideErrorModal","continueAsGuest","getUserInitials","initials","charAt","goHome","goAllLists","goUsers","Provider","value","children","jsTPS","this","transactions","numTransactions","mostRecentTransaction","performingDo","performingUndo","length","getSize","transaction","i","splice","doTransaction","hasTransactionToRedo","hasTransactionToUndo","undoTransaction","text","toString","createPlaylist","newListName","newSongs","userEmail","ownerName","name","songs","ownerEmail","published","publishedDate","likes","dislikes","likesCount","dislikesCount","listens","comments","deletePlaylistById","id","delete","getPlaylistById","getPlaylistPairs","search","params","updatePlaylistById","playlist","put","getAllPlaylists","q","CreateSong_Transaction","initStore","initIndex","initSong","store","index","song","createSong","removeSong","jsTPS_Transaction","MoveSong_Transaction","initOldSongIndex","initNewSongIndex","oldSongIndex","newSongIndex","moveSong","RemoveSong_Transaction","UpdateSong_Transaction","initOldSongData","initNewSongData","oldSongData","newSongData","updateSong","GlobalStoreContext","GlobalStoreActionType","CHANGE_LIST_NAME","CLOSE_CURRENT_LIST","CREATE_NEW_LIST","LOAD_ID_NAME_PAIRS","LOAD_ID_NAME_PAIRS2","MARK_LIST_FOR_DELETION","UNMARK_LIST_FOR_DELETION","SET_CURRENT_LIST","SET_LIST_NAME_EDIT_ACTIVE","EDIT_SONG","REMOVE_SONG","HIDE_MODALS","LOAD_ALL_PLAYLISTS","PUBLISH_LIST","LIKE","UPDATE_QUERIES","UPDATE_PLAY_SONG","tps","CurrentModal","GlobalStoreContextProvider","currentModal","idNamePairs","allPlaylists","currentList","currentSongIndex","currentSong","newListCounter","listNameActive","listIdMarkedForDeletion","listMarkedForDeletion","deleteSong","deleteSongIndex","sortQuery","searchQuery","currentPlayIndex","setStore","useContext","storeReducer","SHOW_NAME_EXISTS","sort","updatePlaySong","updateQueries","query1","query2","changeListName","newName","success","updateList","_id","getListPairs","pairsArray","asyncChangeListName","publishPlaylist","Date","publishPlaylist2","closeCurrentList","clearAllTransactions","createNewList","a","counter","string","substring","parseInt","Math","max","newList","loadIdNamePairs","duplicateOwnList","isInOrigList","temp","found","likePlaylist","getListToDelete","dislikePlaylist","indexOf","addComment","comment","update","object","updateCurrentList","addListen","response2","pairsArray2","loadIdNamePairs2","query","query3","unmarkListForDeletion","markListForDeletion","showEditSongModal","songIndex","songToEdit","showRemoveSongModal","songToRemove","deleteList","deleteMarkedList","hideModals","isDeleteListModalOpen","isEditSongModalOpen","isPlaylistExistsModalOpen","isRemoveSongModalOpen","setCurrentList","asyncSetCurrentList","getPlaylistSize","addNewSong","addCreateSongTransaction","start","end","list","songData","title","artist","youTubeId","playlistSize","addTransaction","addMoveSongTransaction","addRemoveSongTransaction","addUpdateSongTransaction","undo","redo","canAddNewSong","canUndo","canRedo","canClose","setIsListNameEditActive","EditToolbar","AppBanner","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","menuId","loggedOutMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","loggedInMenu","MenuItem","onClick","menu","Box","sx","flexGrow","AppBar","position","style","background","Toolbar","Typography","variant","noWrap","component","display","xs","sm","textDecoration","color","to","src","logo","height","width","md","IconButton","size","edge","event","currentTarget","userInitials","getAccountMenu","SongCard","setDraggedTo","preventDefault","target","targetId","sourceId","dataTransfer","getData","index1","index2","cardClass","Grid","container","className","onDragStart","setData","onDragOver","onDragEnter","onDragLeave","onDrop","draggable","detail","AddSongButton","top","left","transform","bgcolor","border","boxShadow","p","MUIRemoveSongModal","Modal","Button","MUIEditSongModal","setTitle","setArtist","setYouTubeId","defaultValue","onChange","MUIDeleteModal","MUIPlaylistExists","Alert","severity","ListCard","editActive","setEditActive","setText","selected","isExpanded","setIsExpanded","expand","handleDoubleClick","toggleEdit","handleKeyDown","keyCode","ctrlKey","isListNameEditActive","modalJSX","cardElement","ListItem","borderRadius","marginBottom","button","onKeyDown","tabIndex","item","TextField","margin","required","fullWidth","label","autoComplete","onKeyPress","code","inputProps","fontSize","InputLabelProps","autoFocus","maxHeight","overflow","List","map","MenuBar","setMenu","setSort","setSearch","handleHome","handleAllLists","handleUsers","handleChange","then","placeholder","fill","FormControl","InputLabel","Select","SongCard2","ListCard2","liked","setLiked","disliked","setDisliked","newActive","AllPlaylists","listCard","ListCard3","YouTubePlayer","play","setPlay","loadAndPlayCurrentSong","player","loadVideoById","playVideo","incSong","playerStatus","videoId","opts","playerVars","autoplay","onReady","onStateChange","Comment","Comments","marginTop","HomeScreen","setPlayer","handlePlayerSet","className2","UserPlaylists","SplashScreen","HomeWrapper","Copyright","align","Link","href","getFullYear","MUIMessageError","error","LoginScreen","CssBaseline","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","flexDirection","alignItems","Avatar","m","noValidate","onSubmit","formData","FormData","mt","FormControlLabel","control","Checkbox","mb","RegisterScreen","Container","maxWidth","spacing","justifyContent","Statusbar","WorkspaceScreen","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.980aac34.chunk.js","sourcesContent":["/*\n    This is our http api for all things auth, which we use to \n    send authorization requests to our back-end API. Note we`re \n    using the Axios library for doing this, which is an easy to \n    use AJAX-based library. We could (and maybe should) use Fetch, \n    which is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it`s a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nconst api = axios.create({\n  baseURL: \"http://localhost:4000/auth\",\n});\n\n// THESE ARE ALL THE REQUESTS WE`LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /register). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE WE WILL FORMAT HERE, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n\nexport const getLoggedIn = () => api.get(`/loggedIn/`);\nexport const loginUser = (email, password) => {\n  return api.post(`/login/`, {\n    email: email,\n    password: password,\n  });\n};\nexport const logoutUser = () => api.get(`/logout/`);\nexport const registerUser = (\n  username,\n  firstName,\n  lastName,\n  email,\n  password,\n  passwordVerify\n) => {\n  return api.post(`/register/`, {\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    password: password,\n    passwordVerify: passwordVerify,\n    username: username,\n  });\n};\nconst apis = {\n  getLoggedIn,\n  registerUser,\n  loginUser,\n  logoutUser,\n};\n\nexport default apis;\n","import React, { createContext, useEffect, useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"./auth-request-api\";\n\nconst AuthContext = createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n  GET_LOGGED_IN: \"GET_LOGGED_IN\",\n  LOGIN_USER: \"LOGIN_USER\",\n  LOGOUT_USER: \"LOGOUT_USER\",\n  REGISTER_USER: \"REGISTER_USER\",\n  HIDE_ERROR_MODAL: \"HIDE_ERROR_MODAL\",\n  DISPLAY_ERROR_MODAL: \"DISPLAY_ERROR_MODAL\",\n  HOME: \"HOME\",\n  ALL_LISTS: \"ALL_LISTS\",\n  USERS: \"USERS\",\n  GUEST: \"GUEST\",\n};\n\nfunction AuthContextProvider(props) {\n  const [auth, setAuth] = useState({\n    user: null,\n    loggedIn: false,\n    e: false,\n    message: \"\",\n    home: false,\n    allLists: false,\n    users: false,\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    auth.getLoggedIn();\n  }, []);\n\n  const authReducer = (action) => {\n    const { type, payload } = action;\n    switch (type) {\n      case AuthActionType.GET_LOGGED_IN: {\n        return setAuth({\n          user: payload.user,\n          loggedIn: payload.loggedIn,\n          e: auth.e,\n          message: auth.message,\n          home: auth.home,\n          allLists: auth.allLists,\n          users: auth.users,\n        });\n      }\n      case AuthActionType.LOGIN_USER: {\n        return setAuth({\n          user: payload.user,\n          loggedIn: true,\n          e: auth.e,\n          message: auth.message,\n          home: true,\n          allLists: false,\n          users: false,\n        });\n      }\n      case AuthActionType.GUEST: {\n        return setAuth({\n          user: null,\n          loggedIn: true,\n          e: auth.e,\n          message: auth.message,\n          home: false,\n          allLists: true,\n          users: false,\n        });\n      }\n      case AuthActionType.LOGOUT_USER: {\n        return setAuth({\n          user: null,\n          loggedIn: false,\n          e: auth.e,\n          message: auth.message,\n          home: false,\n          allLists: false,\n          users: false,\n        });\n      }\n      case AuthActionType.REGISTER_USER: {\n        return setAuth({\n          user: null,\n          loggedIn: false,\n          e: auth.e,\n          message: auth.message,\n          home: true,\n          allLists: false,\n          users: false,\n        });\n      }\n      case AuthActionType.HIDE_ERROR_MODAL: {\n        return setAuth({\n          user: auth.user,\n          loggedIn: auth.loggedIn,\n          e: false,\n          message: \"\",\n          home: auth.home,\n          allLists: auth.allLists,\n          users: auth.users,\n        });\n      }\n      case AuthActionType.DISPLAY_ERROR_MODAL: {\n        return setAuth({\n          user: auth.user,\n          loggedIn: auth.loggedIn,\n          e: true,\n          message: payload.message,\n          home: auth.home,\n          allLists: auth.allLists,\n          users: auth.users,\n        });\n      }\n      case AuthActionType.HOME: {\n        return setAuth({\n          user: auth.user,\n          loggedIn: auth.loggedIn,\n          e: false,\n          message: \"\",\n          home: true,\n          allLists: false,\n          users: false,\n        });\n      }\n      case AuthActionType.ALL_LISTS: {\n        return setAuth({\n          user: auth.user,\n          loggedIn: auth.loggedIn,\n          e: false,\n          message: \"\",\n          home: false,\n          allLists: true,\n          users: false,\n        });\n      }\n      case AuthActionType.USERS: {\n        return setAuth({\n          user: auth.user,\n          loggedIn: auth.loggedIn,\n          e: false,\n          message: \"\",\n          home: false,\n          allLists: false,\n          users: true,\n        });\n      }\n\n      default:\n        return auth;\n    }\n  };\n\n  auth.getLoggedIn = async function () {\n    const response = await api.getLoggedIn();\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.SET_LOGGED_IN,\n        payload: {\n          loggedIn: response.data.loggedIn,\n          user: response.data.user,\n        },\n      });\n    }\n  };\n\n  auth.registerUser = async function (\n    username,\n    firstName,\n    lastName,\n    email,\n    password,\n    passwordVerify\n  ) {\n    try {\n      const response = await api.registerUser(\n        username,\n        firstName,\n        lastName,\n        email,\n        password,\n        passwordVerify\n      );\n      if (response.status === 200) {\n        authReducer({\n          type: AuthActionType.REGISTER_USER,\n          payload: {\n            user: response.data.user,\n          },\n        });\n        history.push(\"/login\");\n      }\n    } catch (err) {\n      authReducer({\n        type: AuthActionType.DISPLAY_ERROR_MODAL,\n        payload: {\n          message: err.response.data.errorMessage,\n        },\n      });\n    }\n  };\n\n  auth.hideErrorModal = async function () {\n    authReducer({\n      type: AuthActionType.HIDE_ERROR_MODAL,\n    });\n  };\n\n  auth.continueAsGuest = async function () {\n    authReducer({\n      type: AuthActionType.GUEST,\n    });\n  };\n\n  auth.loginUser = async function (email, password) {\n    try {\n      console.log(email, password);\n      const response = await api.loginUser(email, password);\n      console.log(response.data.user);\n      if (response.status === 200) {\n        //menu.login();\n        authReducer({\n          type: AuthActionType.LOGIN_USER,\n          payload: {\n            user: response.data.user,\n          },\n        });\n        history.push(\"/\");\n      }\n    } catch (err) {\n      authReducer({\n        type: AuthActionType.DISPLAY_ERROR_MODAL,\n        payload: {\n          message: err.response.data.errorMessage,\n        },\n      });\n    }\n  };\n\n  auth.logoutUser = async function () {\n    const response = await api.logoutUser();\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.LOGOUT_USER,\n        payload: null,\n      });\n      history.push(\"/\");\n    }\n  };\n\n  auth.getUserInitials = function () {\n    let initials = \"\";\n    if (auth.user) {\n      initials += auth.user.firstName.charAt(0);\n      initials += auth.user.lastName.charAt(0);\n    }\n    console.log(\"user initials: \" + initials);\n    return initials;\n  };\n\n  auth.goHome = function () {\n    authReducer({\n      type: AuthActionType.HOME,\n    });\n  };\n\n  auth.goAllLists = function () {\n    authReducer({\n      type: AuthActionType.ALL_LISTS,\n    });\n  };\n\n  auth.goUsers = function () {\n    authReducer({\n      type: AuthActionType.USERS,\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        auth,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };\n","/**\n * jsTPS_Transaction\n * \n * This provides the basic structure for a transaction class. Note to use\n * jsTPS one should create objects that define these two methods, doTransaction\n * and undoTransaction, which will update the application state accordingly.\n * \n * @author THE McKilla Gorilla (accept no imposters)\n * @version 1.0\n */\nexport class jsTPS_Transaction {\n    /**\n     * This method is called by jTPS when a transaction is executed.\n     */\n    doTransaction() {\n        console.log(\"doTransaction - MISSING IMPLEMENTATION\");\n    }\n    \n    /**\n     * This method is called by jTPS when a transaction is undone.\n     */\n    undoTransaction() {\n        console.log(\"undoTransaction - MISSING IMPLEMENTATION\");\n    }\n}\n\n/**\n * jsTPS\n * \n * This class serves as the Transaction Processing System. Note that it manages\n * a stack of jsTPS_Transaction objects, each of which know how to do or undo\n * state changes for the given application. Note that this TPS is not platform\n * specific as it is programmed in raw JavaScript.\n */\nexport default class jsTPS {\n    constructor() {\n        // THE TRANSACTION STACK\n        this.transactions = [];\n\n        // THE TOTAL NUMBER OF TRANSACTIONS ON THE STACK,\n        // INCLUDING THOSE THAT MAY HAVE ALREADY BEEN UNDONE\n        this.numTransactions = 0;\n\n        // THE INDEX OF THE MOST RECENT TRANSACTION, NOTE THAT\n        // THIS MAY BE IN THE MIDDLE OF THE TRANSACTION STACK\n        // IF SOME TRANSACTIONS ON THE STACK HAVE BEEN UNDONE\n        // AND STILL COULD BE REDONE.\n        this.mostRecentTransaction = -1;\n\n        // THESE STATE VARIABLES ARE TURNED ON AND OFF WHILE\n        // TRANSACTIONS ARE DOING THEIR WORK SO AS TO HELP\n        // MANAGE CONCURRENT UPDATES\n        this.performingDo = false;\n        this.performingUndo = false;\n    }\n\n    /**\n     * isPerformingDo\n     * \n     * Accessor method for getting a boolean representing whether or not\n     * a transaction is currently in the midst of a do/redo operation.\n     */\n    isPerformingDo() {\n        return this.performingDo;\n    }\n\n    /**\n     * isPerformingUndo\n     * \n     * Accessor method for getting a boolean representing whether or not\n     * a transaction is currently in the midst of an undo operation.\n     */\n    isPerformingUndo() {\n        return this.performingUndo;\n    }\n\n    /**\n     * getSize\n     * \n     * Accessor method for getting the number of transactions on the stack.\n     */\n    getSize() {\n        return this.transactions.length;\n    }\n\n    /**\n     * getRedoSize\n     * \n     * Method for getting the total number of transactions on the stack\n     * that can possibly be redone.\n     */\n    getRedoSize() {\n        return this.getSize() - this.mostRecentTransaction - 1;\n    }\n\n    /**\n     * getUndoSize\n     * \n     * Method for getting the total number of transactions on the stack\n     * that can possible be undone.\n     */\n    getUndoSize() {\n        return this.mostRecentTransaction + 1;\n    }\n\n    /**\n     * hasTransactionToRedo\n     * \n     * Method for getting a boolean representing whether or not\n     * there are transactions on the stack that can be redone.\n     */\n    hasTransactionToRedo() {\n        return (this.mostRecentTransaction+1) < this.numTransactions;\n    }\n\n    /**\n     * hasTransactionToUndo\n     * \n     * Method for getting a boolean representing whehter or not\n     * there are transactions on the stack that can be undone.\n     */\n    hasTransactionToUndo() {\n        return this.mostRecentTransaction >= 0;\n    }\n\n    /**\n     * addTransaction\n     * \n     * Method for adding a transaction to the TPS stack, note it\n     * also then does the transaction.\n     * \n     * @param {jsTPS_Transaction} transaction Transaction to add to the stack and do.\n     */\n    addTransaction(transaction) {\n        // ARE WE BRANCHING?\n        if ((this.mostRecentTransaction < 0) \n            || (this.mostRecentTransaction < (this.transactions.length - 1))) {\n                for (let i = this.transactions.length - 1; i > this.mostRecentTransaction; i--) {\n                    this.transactions.splice(i, 1);\n                }\n                this.numTransactions = this.mostRecentTransaction + 2;\n        }\n        else {\n            this.numTransactions++;\n        }\n\n        // ADD THE TRANSACTION\n        this.transactions[this.mostRecentTransaction+1] = transaction;\n\n        // AND EXECUTE IT\n        this.doTransaction();\n    }\n\n    /**\n     * doTransaction\n     * \n     * Does the current transaction on the stack and advances the transaction\n     * counter. Note this function may be invoked as a result of either adding\n     * a transaction (which also does it), or redoing a transaction.\n     */\n    doTransaction() {\n        if (this.hasTransactionToRedo()) {\n            this.performingDo = true;\n            let transaction = this.transactions[this.mostRecentTransaction+1];\n            transaction.doTransaction();\n            this.mostRecentTransaction++;\n            this.performingDo = false;\n        }\n    }\n\n    /**\n     * This function gets the most recently executed transaction on the \n     * TPS stack and undoes it, moving the TPS counter accordingly.\n     */\n    undoTransaction() {\n        if (this.hasTransactionToUndo()) {\n            this.performingUndo = true;\n            let transaction = this.transactions[this.mostRecentTransaction];\n            transaction.undoTransaction();\n            this.mostRecentTransaction--;\n            this.performingUndo = false;\n        }\n    }\n\n    /**\n     * clearAllTransactions\n     * \n     * Removes all the transactions from the TPS, leaving it with none.\n     */\n    clearAllTransactions() {\n        // REMOVE ALL THE TRANSACTIONS\n        this.transactions = [];\n        \n        // MAKE SURE TO RESET THE LOCATION OF THE\n        // TOP OF THE TPS STACK TOO\n        this.mostRecentTransaction = -1;      \n        this.numTransactions = 0; \n    }\n\n    /**\n     * toString\n     * \n     * Builds and returns a textual represention of the full TPS and its stack.\n     */\n    toString() {        \n        let text = \"--Number of Transactions: \" + this.numTransactions + \"\\n\";\n        text += \"--Current Index on Stack: \" + this.mostRecentTransaction + \"\\n\";\n        text += \"--Current Transaction Stack:\\n\";\n        for (let i = 0; i <= this.mostRecentTransaction; i++) {\n            let jT = this.transactions[i];\n            text += \"----\" + jT.toString() + \"\\n\";\n        }\n        return text;        \n    }\n}","/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we`re using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it`s a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nconst api = axios.create({\n  baseURL: \"http://localhost:4000/api\",\n});\n\n// THESE ARE ALL THE REQUESTS WE`LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /top5list). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE WE WILL FORMAT HERE, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\nexport const createPlaylist = (newListName, newSongs, userEmail, ownerName) => {\n  return api.post(`/playlist/`, {\n    // SPECIFY THE PAYLOAD\n    name: newListName,\n    songs: newSongs,\n    ownerEmail: userEmail,\n    ownerName: ownerName,\n    published: false,\n    publishedDate: null,\n    likes: [],\n    dislikes: [],\n    likesCount: 0,\n    dislikesCount: 0,\n    listens: 0,\n    comments: [],\n  });\n};\nexport const deletePlaylistById = (id) => api.delete(`/playlist/${id}`);\nexport const getPlaylistById = (id) => api.get(`/playlist/${id}`);\nexport const getPlaylistPairs = (id, search) =>\n  api.get(`/playlistpairs/${id}`, {\n    params: {\n      search: search,\n    },\n  });\nexport const updatePlaylistById = (id, playlist) => {\n  return api.put(`/playlist/${id}`, {\n    // SPECIFY THE PAYLOAD\n    playlist: playlist,\n  });\n};\nexport const getAllPlaylists = (q, search, type) => {\n  return api.get(`/playlists/${q}`, {\n    params: {\n      search: search,\n      type: type,\n    },\n  });\n};\n\nconst apis = {\n  createPlaylist,\n  deletePlaylistById,\n  getPlaylistById,\n  getPlaylistPairs,\n  updatePlaylistById,\n  getAllPlaylists,\n};\n\nexport default apis;\n","import jsTPS_Transaction from \"../common/jsTPS.js\";\n/**\n * CreateSong_Transaction\n *\n * This class represents a transaction that creates a song\n * in the playlist. It will be managed by the transaction stack.\n *\n * @author McKilla Gorilla\n * @author ?\n */\nexport default class CreateSong_Transaction extends jsTPS_Transaction {\n  constructor(initStore, initIndex, initSong) {\n    super();\n    this.store = initStore;\n    this.index = initIndex;\n    this.song = initSong;\n  }\n\n  doTransaction() {\n    this.store.createSong(this.index, this.song);\n  }\n\n  undoTransaction() {\n    this.store.removeSong(this.index);\n  }\n}\n","import jsTPS_Transaction from \"../common/jsTPS.js\"\n/**\n * MoveSong_Transaction\n * \n * This class represents a transaction that works with drag\n * and drop. It will be managed by the transaction stack.\n * \n * @author McKilla Gorilla\n * @author ?\n */\nexport default class MoveSong_Transaction extends jsTPS_Transaction {\n    constructor(initStore, initOldSongIndex, initNewSongIndex) {\n        super();\n        this.store = initStore;\n        this.oldSongIndex = initOldSongIndex;\n        this.newSongIndex = initNewSongIndex;\n    }\n\n    doTransaction() {\n        this.store.moveSong(this.oldSongIndex, this.newSongIndex);\n    }\n    \n    undoTransaction() {\n        this.store.moveSong(this.newSongIndex, this.oldSongIndex);\n    }\n}","import jsTPS_Transaction from \"../common/jsTPS.js\"\n\n/**\n * DeleteSong_Transaction\n * \n * This class represents a transaction that deletes a song\n * in the playlist. It will be managed by the transaction stack.\n * \n * @author McKilla Gorilla\n * @author ?\n */\nexport default class RemoveSong_Transaction extends jsTPS_Transaction {\n    constructor(initStore, initIndex, initSong) {\n        super();\n        this.store = initStore;\n        this.index = initIndex;\n        this.song = initSong;\n    }\n\n    doTransaction() {\n        this.store.removeSong(this.index);\n    }\n    \n    undoTransaction() {\n        this.store.createSong(this.index, this.song);\n    }\n}","import jsTPS_Transaction from \"../common/jsTPS.js\"\n\n/**\n * UpdateSong_Transaction\n * \n * This class represents a transaction that updates a song\n * in the playlist. It will be managed by the transaction stack.\n * \n * @author McKilla Gorilla\n * @author ?\n */\nexport default class UpdateSong_Transaction extends jsTPS_Transaction {\n    constructor(initStore, initIndex, initOldSongData, initNewSongData) {\n        super();\n        this.store = initStore;\n        this.index = initIndex;\n        this.oldSongData = initOldSongData;\n        this.newSongData = initNewSongData;\n    }\n\n    doTransaction() {\n        this.store.updateSong(this.index, this.newSongData);\n    }\n    \n    undoTransaction() {\n        this.store.updateSong(this.index, this.oldSongData);\n    }\n}","import { createContext, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport jsTPS from \"../common/jsTPS\";\nimport api from \"./store-request-api\";\nimport CreateSong_Transaction from \"../transactions/CreateSong_Transaction\";\nimport MoveSong_Transaction from \"../transactions/MoveSong_Transaction\";\nimport RemoveSong_Transaction from \"../transactions/RemoveSong_Transaction\";\nimport UpdateSong_Transaction from \"../transactions/UpdateSong_Transaction\";\nimport AuthContext from \"../auth\";\n/*\n    This is our global data store. Note that it uses the Flux design pattern,\n    which makes use of things like actions and reducers. \n    \n    @author McKilla Gorilla\n*/\n\n// THIS IS THE CONTEXT WE'LL USE TO SHARE OUR STORE\nexport const GlobalStoreContext = createContext({});\nconsole.log(\"create GlobalStoreContext\");\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR GLOBAL\n// DATA STORE STATE THAT CAN BE PROCESSED\nexport const GlobalStoreActionType = {\n  CHANGE_LIST_NAME: \"CHANGE_LIST_NAME\",\n  CLOSE_CURRENT_LIST: \"CLOSE_CURRENT_LIST\",\n  CREATE_NEW_LIST: \"CREATE_NEW_LIST\",\n  LOAD_ID_NAME_PAIRS: \"LOAD_ID_NAME_PAIRS\",\n  LOAD_ID_NAME_PAIRS2: \"LOAD_ID_NAME_PAIRS2\",\n  MARK_LIST_FOR_DELETION: \"MARK_LIST_FOR_DELETION\",\n  UNMARK_LIST_FOR_DELETION: \"UNMARK_LIST_FOR_DELETEION\",\n  SET_CURRENT_LIST: \"SET_CURRENT_LIST\",\n  SET_LIST_NAME_EDIT_ACTIVE: \"SET_LIST_NAME_EDIT_ACTIVE\",\n  EDIT_SONG: \"EDIT_SONG\",\n  REMOVE_SONG: \"REMOVE_SONG\",\n  HIDE_MODALS: \"HIDE_MODALS\",\n  LOAD_ALL_PLAYLISTS: \"LOAD_ALL_PLAYLISTS\",\n  PUBLISH_LIST: \"PUBLISH_LIST\",\n  LIKE: \"LIKE\",\n  UPDATE_QUERIES: \"UPDATE_QUERIES\",\n  UPDATE_PLAY_SONG: \"UPDATE_PLAY_SONG\",\n};\n\n// WE'LL NEED THIS TO PROCESS TRANSACTIONS\nconst tps = new jsTPS();\n\nconst CurrentModal = {\n  NONE: \"NONE\",\n  DELETE_LIST: \"DELETE_LIST\",\n  EDIT_SONG: \"EDIT_SONG\",\n  REMOVE_SONG: \"REMOVE_SONG\",\n  PLAYLIST_EXISTS: \"PLAYLIST_EXISTS\",\n};\n\n// WITH THIS WE'RE MAKING OUR GLOBAL DATA STORE\n// AVAILABLE TO THE REST OF THE APPLICATION\nfunction GlobalStoreContextProvider(props) {\n  // THESE ARE ALL THE THINGS OUR DATA STORE WILL MANAGE\n  const [store, setStore] = useState({\n    currentModal: CurrentModal.NONE,\n    idNamePairs: [],\n    allPlaylists: [],\n    currentList: null,\n    currentSongIndex: -1,\n    currentSong: null,\n    newListCounter: 0,\n    listNameActive: false,\n    listIdMarkedForDeletion: null,\n    listMarkedForDeletion: null,\n    deleteSong: null,\n    deleteSongIndex: -1,\n    sortQuery: -1,\n    searchQuery: \"\",\n    currentPlayIndex: null,\n  });\n  const history = useHistory();\n\n  console.log(\"inside useGlobalStore\");\n\n  // SINCE WE'VE WRAPPED THE STORE IN THE AUTH CONTEXT WE CAN ACCESS THE USER HERE\n  const { auth } = useContext(AuthContext);\n  console.log(\"auth: \" + auth);\n\n  // HERE'S THE DATA STORE'S REDUCER, IT MUST\n  // HANDLE EVERY TYPE OF STATE CHANGE\n  const storeReducer = (action) => {\n    const { type, payload } = action;\n    switch (type) {\n      // LIST UPDATE OF ITS NAME\n      case GlobalStoreActionType.CHANGE_LIST_NAME: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: payload.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: store.currentList,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      // STOP EDITING THE CURRENT LIST\n      case GlobalStoreActionType.CLOSE_CURRENT_LIST: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: null,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: -1,\n        });\n      }\n      // CREATE A NEW LIST\n      case GlobalStoreActionType.CREATE_NEW_LIST: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: store.currentList,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter + 1,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      case GlobalStoreActionType.PUBLISH_LIST: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: payload.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: null,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      // GET ALL THE LISTS SO WE CAN PRESENT THEM\n      case GlobalStoreActionType.LOAD_ID_NAME_PAIRS: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: payload.idNamePairs,\n          allPlaylists: payload.allPlaylists,\n          currentList: null,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: payload.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n\n      case GlobalStoreActionType.LOAD_ID_NAME_PAIRS2: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: payload.idNamePairs,\n          allPlaylists: payload.allPlaylists,\n          currentList: null,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: payload.sortQuery,\n          searchQuery: payload.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n\n      case GlobalStoreActionType.LOAD_ALL_PLAYLISTS: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: payload,\n          currentList: null,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      // PREPARE TO DELETE A LIST\n      case GlobalStoreActionType.MARK_LIST_FOR_DELETION: {\n        return setStore({\n          currentModal: CurrentModal.DELETE_LIST,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: store.currentList,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: payload.id,\n          listMarkedForDeletion: payload.playlist,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      case GlobalStoreActionType.UNMARK_LIST_FOR_DELETION: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: store.currentList,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      // UPDATE A LIST\n      case GlobalStoreActionType.SET_CURRENT_LIST: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: payload,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: 0,\n        });\n      }\n      // START EDITING A LIST NAME\n      case GlobalStoreActionType.SET_LIST_NAME_EDIT_ACTIVE: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: payload,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: true,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      //\n      case GlobalStoreActionType.EDIT_SONG: {\n        return setStore({\n          currentModal: CurrentModal.EDIT_SONG,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: store.currentList,\n          currentSongIndex: payload.currentSongIndex,\n          currentSong: payload.currentSong,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n\n      case GlobalStoreActionType.SHOW_NAME_EXISTS: {\n        return setStore({\n          currentModal: CurrentModal.PLAYLIST_EXISTS,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: store.currentList,\n          currentSongIndex: store.currentSongIndex,\n          currentSong: store.currentSong,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      case GlobalStoreActionType.LIKE: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: store.currentList,\n          currentSongIndex: store.currentSongIndex,\n          currentSong: store.currentSong,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      case GlobalStoreActionType.REMOVE_SONG: {\n        return setStore({\n          currentModal: CurrentModal.REMOVE_SONG,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: payload,\n          currentList: store.currentList,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: payload.deleteSongIndex,\n          deleteSong: payload.deleteSong,\n          newListCounter: null,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      case GlobalStoreActionType.HIDE_MODALS: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: store.currentList,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      case GlobalStoreActionType.UPDATE_QUERIES: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: store.currentList,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: payload.sort,\n          searchQuery: payload.search,\n          currentPlayIndex: store.currentPlayIndex,\n        });\n      }\n      case GlobalStoreActionType.UPDATE_PLAY_SONG: {\n        return setStore({\n          currentModal: CurrentModal.NONE,\n          idNamePairs: store.idNamePairs,\n          allPlaylists: store.allPlaylists,\n          currentList: store.currentList,\n          currentSongIndex: -1,\n          currentSong: null,\n          deleteSongIndex: -1,\n          deleteSong: null,\n          newListCounter: store.newListCounter,\n          listNameActive: false,\n          listIdMarkedForDeletion: null,\n          listMarkedForDeletion: null,\n          sortQuery: store.sort,\n          searchQuery: store.search,\n          currentPlayIndex: payload,\n        });\n      }\n      default:\n        return store;\n    }\n  };\n\n  store.updatePlaySong = async function (index) {\n    storeReducer({\n      type: GlobalStoreActionType.UPDATE_PLAY_SONG,\n      payload: index,\n    });\n  };\n\n  store.updateQueries = async function (query1, query2) {\n    storeReducer({\n      type: GlobalStoreActionType.UPDATE_QUERIES,\n      payload: {\n        sort: query1,\n        search: query2,\n      },\n    });\n  };\n\n  // THESE ARE THE FUNCTIONS THAT WILL UPDATE OUR STORE AND\n  // DRIVE THE STATE OF THE APPLICATION. WE'LL CALL THESE IN\n  // RESPONSE TO EVENTS INSIDE OUR COMPONENTS.\n\n  // THIS FUNCTION PROCESSES CHANGING A LIST NAME\n  store.changeListName = function (id, newName) {\n    for (let i = 0; i < store.idNamePairs.length; i++) {\n      let string = store.idNamePairs[i].name; // untitled\n      if (string === newName) {\n        storeReducer({\n          type: GlobalStoreActionType.SHOW_NAME_EXISTS,\n        });\n        return false;\n      }\n    }\n    async function asyncChangeListName(id) {\n      let response = await api.getPlaylistById(id);\n      if (response.data.success) {\n        let playlist = response.data.playlist;\n        playlist.name = newName;\n        async function updateList(playlist) {\n          response = await api.updatePlaylistById(playlist._id, playlist);\n          if (response.data.success) {\n            async function getListPairs(playlist) {\n              response = await api.getPlaylistPairs();\n              if (response.data.success) {\n                let pairsArray = response.data.idNamePairs;\n                storeReducer({\n                  type: GlobalStoreActionType.CHANGE_LIST_NAME,\n                  payload: {\n                    idNamePairs: pairsArray,\n                    playlist: playlist,\n                  },\n                });\n              }\n            }\n            getListPairs(playlist);\n          }\n        }\n        updateList(playlist);\n      }\n    }\n    asyncChangeListName(id);\n  };\n\n  store.publishPlaylist = function () {\n    async function publishPlaylist2() {\n      store.currentList.published = true;\n      store.currentList.publishedDate = new Date();\n      store.currentList.likes = [];\n      store.currentList.dislikes = [];\n\n      async function updateList() {\n        let response = await api.updatePlaylistById(\n          store.currentList._id,\n          store.currentList\n        );\n        if (response.data.success) {\n          async function getListPairs() {\n            response = await api.getPlaylistPairs();\n            if (response.data.success) {\n              let pairsArray = response.data.idNamePairs;\n              storeReducer({\n                type: GlobalStoreActionType.PUBLISH_LIST,\n                payload: {\n                  idNamePairs: pairsArray,\n                  playlist: store.currentList,\n                },\n              });\n            }\n          }\n          getListPairs();\n        }\n      }\n      updateList();\n    }\n    publishPlaylist2();\n  };\n\n  // THIS FUNCTION PROCESSES CLOSING THE CURRENTLY LOADED LIST\n  store.closeCurrentList = async function () {\n    storeReducer({\n      type: GlobalStoreActionType.CLOSE_CURRENT_LIST,\n      payload: {},\n    });\n    tps.clearAllTransactions();\n  };\n\n  // THIS FUNCTION CREATES A NEW LIST\n  store.createNewList = async function () {\n    let counter = 0;\n    for (let i = 0; i < store.idNamePairs.length; i++) {\n      let string = store.idNamePairs[i].name; // untitled\n      if (string.substring(0, 8) === \"Untitled\") {\n        let a = parseInt(string.substring(9));\n        counter = Math.max(counter, a + 1);\n      }\n    }\n\n    let newListName = \"Untitled \" + counter;\n    const response = await api.createPlaylist(\n      newListName,\n      [],\n      auth.user.email,\n      auth.user.username\n    );\n    if (response.status === 201) {\n      tps.clearAllTransactions();\n      let newList = response.data.playlist;\n      storeReducer({\n        type: GlobalStoreActionType.CREATE_NEW_LIST,\n        payload: newList,\n      });\n      await store.loadIdNamePairs();\n      // IF IT'S A VALID LIST THEN LET'S START EDITING IT\n      // history.push(\"/playlist/\" + newList._id);\n    } else {\n      console.log(\"API FAILED TO CREATE A NEW LIST\");\n    }\n  };\n\n  store.duplicateOwnList = async function (playlist) {\n    let counter = 2;\n    let isInOrigList = false;\n    for (let i = 0; i < store.idNamePairs.length; i++) {\n      let string = store.idNamePairs[i].name;\n      if (string === playlist.name) {\n        isInOrigList = true;\n        break;\n      }\n    }\n    if (isInOrigList) {\n      while (true) {\n        let temp = playlist.name + \" \" + counter;\n        let found = false;\n        for (let i = 0; i < store.idNamePairs.length; i++) {\n          let string = store.idNamePairs[i].name;\n          if (string === temp) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) break;\n        counter += 1;\n      }\n    }\n\n    let newListName = playlist.name + \" \" + counter;\n    if (!isInOrigList) newListName = playlist.name;\n    const response = await api.createPlaylist(\n      newListName,\n      playlist.songs,\n      auth.user.email,\n      auth.user.username\n    );\n    if (response.status === 201) {\n      tps.clearAllTransactions();\n      let newList = response.data.playlist;\n      storeReducer({\n        type: GlobalStoreActionType.CREATE_NEW_LIST,\n        payload: newList,\n      });\n      await store.loadIdNamePairs();\n      // IF IT'S A VALID LIST THEN LET'S START EDITING IT\n      // history.push(\"/playlist/\" + newList._id);\n    } else {\n      console.log(\"API FAILED TO CREATE A NEW LIST\");\n    }\n  };\n\n  store.likePlaylist = async function (id, type) {\n    if (auth.user === null) return;\n    async function getListToDelete(id) {\n      let response = await api.getPlaylistById(id);\n      if (response.data.success) {\n        let playlist = response.data.playlist;\n        if (type === 1) {\n          playlist.likes.push(auth.user.email);\n          // playlist.listens += 1;\n        } else if (type === 2) {\n          playlist.dislikes.push(auth.user.email);\n        }\n\n        response = await api.updatePlaylistById(playlist._id, playlist);\n        if (response.data.success) {\n          async function getListPairs() {\n            response = await api.getAllPlaylists();\n            if (response.data.success) {\n              let pairsArray = response.data.data;\n              console.log(\"pairsArray\", pairsArray);\n              storeReducer({\n                type: GlobalStoreActionType.LIKE,\n                payload: pairsArray,\n              });\n            }\n          }\n          await getListPairs();\n        }\n      }\n    }\n    await getListToDelete(id);\n    await store.loadIdNamePairs();\n  };\n\n  store.dislikePlaylist = async function (id, type) {\n    if (auth.user === null) return;\n    async function getListToDelete(id) {\n      let response = await api.getPlaylistById(id);\n      if (response.data.success) {\n        let playlist = response.data.playlist;\n        if (type === 1) {\n          let index = playlist.likes.indexOf(auth.user.email);\n          if (index > -1) {\n            playlist.likes.splice(index, 1); // 2nd parameter means remove one item only\n          }\n        } else if (type === 2) {\n          let index = playlist.dislikes.indexOf(auth.user.email);\n          if (index > -1) {\n            playlist.dislikes.splice(index, 1); // 2nd parameter means remove one item only\n          }\n        }\n\n        response = await api.updatePlaylistById(playlist._id, playlist);\n        if (response.data.success) {\n          async function getListPairs() {\n            response = await api.getAllPlaylists();\n            if (response.data.success) {\n              let pairsArray = response.data.data;\n              console.log(\"pairsArray\", pairsArray);\n              storeReducer({\n                type: GlobalStoreActionType.LIKE,\n                payload: pairsArray,\n              });\n            }\n          }\n          await getListPairs();\n        }\n      }\n    }\n    await getListToDelete(id);\n    await store.loadIdNamePairs();\n  };\n\n  store.addComment = async function (comment) {\n    async function update() {\n      let object = {\n        name: auth.user.username,\n        comment: comment,\n      };\n      store.currentList.comments.push(object);\n      await store.updateCurrentList();\n    }\n\n    update();\n  };\n\n  store.addListen = async function () {\n    async function update() {\n      store.currentList.listens = store.currentList.listens + 1;\n\n      await store.updateCurrentList();\n    }\n    await update();\n  };\n\n  // THIS FUNCTION LOADS ALL THE ID, NAME PAIRS SO WE CAN LIST ALL THE LISTS\n  store.loadIdNamePairs = async function () {\n    let response = [];\n    if (auth.user !== null) {\n      response = await api.getPlaylistPairs(store.sortQuery, store.searchQuery);\n    }\n\n    const response2 = await api.getAllPlaylists(\n      store.sortQuery,\n      store.searchQuery,\n      false\n    );\n    if (response2.data.success) {\n      let pairsArray = [];\n      if (auth.user !== null) pairsArray = response.data.idNamePairs;\n\n      // console.log(pairsArray);\n      let pairsArray2 = response2.data.data;\n      //console.log(pairsArray2);\n      await storeReducer({\n        type: GlobalStoreActionType.LOAD_ID_NAME_PAIRS,\n        payload: {\n          idNamePairs: pairsArray,\n          allPlaylists: pairsArray2,\n          sortQuery: store.sortQuery,\n          searchQuery: store.searchQuery,\n        },\n      });\n    } else {\n      console.log(\"API FAILED TO GET THE LIST PAIRS\");\n    }\n  };\n\n  store.loadIdNamePairs2 = async function (query, query2, query3) {\n    let response = [];\n    if (auth.user !== null) {\n      response = await api.getPlaylistPairs(query, query2);\n    }\n\n    const response2 = await api.getAllPlaylists(query, query2, query3);\n    if (response2.data.success) {\n      let pairsArray = [];\n      if (auth.user !== null) pairsArray = response.data.idNamePairs;\n\n      let pairsArray2 = response2.data.data;\n      await storeReducer({\n        type: GlobalStoreActionType.LOAD_ID_NAME_PAIRS2,\n        payload: {\n          idNamePairs: pairsArray,\n          allPlaylists: pairsArray2,\n          sortQuery: query,\n          searchQuery: query2,\n        },\n      });\n    } else {\n      console.log(\"API FAILED TO GET THE LIST PAIRS\");\n    }\n  };\n\n  /*store.sortAllPlaylists = async function (q) {\n    const response = await api.getAllPlaylistsSort(q);\n    if (response.data.success) {\n      let pairsArray = response.data.data;\n      console.log(\"sorted Array\", pairsArray);\n      await storeReducer({\n        type: GlobalStoreActionType.LOAD_ALL_PLAYLISTS,\n        payload: pairsArray,\n      });\n    }\n  };*/\n\n  /*store.loadAllPlaylists = async function () {\n    console.log(response);\n    if (response.data.success) {\n      \n      await storeReducer({\n        type: GlobalStoreActionType.LOAD_ALL_PLAYLISTS,\n        payload: pairsArray,\n      });\n    } else {\n      console.log(\"API FAILED TO GET THE LIST PAIRS\");\n    }\n  };*/\n\n  // THE FOLLOWING 5 FUNCTIONS ARE FOR COORDINATING THE DELETION\n  // OF A LIST, WHICH INCLUDES USING A VERIFICATION MODAL. THE\n  // FUNCTIONS ARE markListForDeletion, deleteList, deleteMarkedList,\n  // showDeleteListModal, and hideDeleteListModal\n\n  store.unmarkListForDeletion = async function () {\n    storeReducer({\n      type: GlobalStoreActionType.UNMARK_LIST_FOR_DELETION,\n      payload: {},\n    });\n  };\n  store.markListForDeletion = function (id) {\n    async function getListToDelete(id) {\n      let response = await api.getPlaylistById(id);\n      if (response.data.success) {\n        let playlist = response.data.playlist;\n        storeReducer({\n          type: GlobalStoreActionType.MARK_LIST_FOR_DELETION,\n          payload: { id: id, playlist: playlist },\n        });\n      }\n    }\n    getListToDelete(id);\n  };\n\n  store.showEditSongModal = (songIndex, songToEdit) => {\n    storeReducer({\n      type: GlobalStoreActionType.EDIT_SONG,\n      payload: { currentSongIndex: songIndex, currentSong: songToEdit },\n    });\n  };\n  store.showRemoveSongModal = (songIndex, songToRemove) => {\n    storeReducer({\n      type: GlobalStoreActionType.REMOVE_SONG,\n      payload: { deleteSongIndex: songIndex, deleteSong: songToRemove },\n    });\n  };\n  store.deleteList = async function (id) {\n    let response = await api.deletePlaylistById(id);\n    if (response.status === 200) {\n      await store.loadIdNamePairs();\n    }\n  };\n  store.deleteMarkedList = async function () {\n    // await store.deleteList(store.listIdMarkedForDeletion);\n    console.log(\"1\");\n    let response = await api.deletePlaylistById(store.listIdMarkedForDeletion);\n    console.log(response);\n    if (response.status === 200) {\n      // await store.loadIdNamePairs();\n      console.log(\"3\");\n    }\n    console.log(\"4\");\n    console.log(store.idNamePairs);\n    await store.hideModals();\n  };\n  // THIS FUNCTION SHOWS THE MODAL FOR PROMPTING THE USER\n  // TO SEE IF THEY REALLY WANT TO DELETE THE LIST\n\n  store.hideModals = () => {\n    storeReducer({\n      type: GlobalStoreActionType.HIDE_MODALS,\n      payload: {},\n    });\n  };\n  store.isDeleteListModalOpen = () => {\n    return store.currentModal === CurrentModal.DELETE_LIST;\n  };\n  store.isEditSongModalOpen = () => {\n    return store.currentModal === CurrentModal.EDIT_SONG;\n  };\n  store.isPlaylistExistsModalOpen = () => {\n    return store.currentModal === CurrentModal.PLAYLIST_EXISTS;\n  };\n\n  store.isRemoveSongModalOpen = () => {\n    return store.currentModal === CurrentModal.REMOVE_SONG;\n  };\n\n  // THE FOLLOWING 8 FUNCTIONS ARE FOR COORDINATING THE UPDATING\n  // OF A LIST, WHICH INCLUDES DEALING WITH THE TRANSACTION STACK. THE\n  // FUNCTIONS ARE setCurrentList, addMoveItemTransaction, addUpdateItemTransaction,\n  // moveItem, updateItem, updateCurrentList, undo, and redo\n  store.setCurrentList = function (id) {\n    async function asyncSetCurrentList(id) {\n      let response = await api.getPlaylistById(id);\n      if (response.data.success) {\n        let playlist = response.data.playlist;\n\n        response = await api.updatePlaylistById(playlist._id, playlist);\n        if (response.data.success) {\n          storeReducer({\n            type: GlobalStoreActionType.SET_CURRENT_LIST,\n            payload: playlist,\n          });\n          // history.push(\"/playlist/\" + playlist._id);\n        }\n      }\n    }\n    asyncSetCurrentList(id);\n  };\n\n  store.getPlaylistSize = function () {\n    return store.currentList.songs.length;\n  };\n  store.addNewSong = function () {\n    let index = this.getPlaylistSize();\n    this.addCreateSongTransaction(index, \"Untitled\", \"?\", \"dQw4w9WgXcQ\");\n  };\n  // THIS FUNCTION CREATES A NEW SONG IN THE CURRENT LIST\n  // USING THE PROVIDED DATA AND PUTS THIS SONG AT INDEX\n  store.createSong = async function (index, song) {\n    let list = store.currentList;\n    list.songs.splice(index, 0, song);\n    // NOW MAKE IT OFFICIAL\n    await store.updateCurrentList();\n  };\n\n  // THIS FUNCTION MOVES A SONG IN THE CURRENT LIST FROM\n  // start TO end AND ADJUSTS ALL OTHER ITEMS ACCORDINGLY\n  store.moveSong = async function (start, end) {\n    console.log(\"MOVING SONG\");\n    let list = store.currentList;\n\n    // WE NEED TO UPDATE THE STATE FOR THE APP\n    if (start < end) {\n      let temp = list.songs[start];\n      for (let i = start; i < end; i++) {\n        list.songs[i] = list.songs[i + 1];\n      }\n      list.songs[end] = temp;\n    } else if (start > end) {\n      let temp = list.songs[start];\n      for (let i = start; i > end; i--) {\n        list.songs[i] = list.songs[i - 1];\n      }\n      list.songs[end] = temp;\n    }\n    // NOW MAKE IT OFFICIAL\n    await store.updateCurrentList();\n  };\n  // THIS FUNCTION REMOVES THE SONG AT THE index LOCATION\n  // FROM THE CURRENT LIST\n  store.removeSong = async function (index) {\n    let list = store.currentList;\n    list.songs.splice(index, 1);\n\n    // NOW MAKE IT OFFICIAL\n    await store.updateCurrentList();\n  };\n\n  // THIS FUNCTION UPDATES THE TEXT IN THE ITEM AT index TO text\n  store.updateSong = async function (index, songData) {\n    let list = store.currentList;\n    let song = list.songs[index];\n    song.title = songData.title;\n    song.artist = songData.artist;\n    song.youTubeId = songData.youTubeId;\n\n    // NOW MAKE IT OFFICIAL\n    await store.updateCurrentList();\n  };\n  store.addNewSong = () => {\n    let playlistSize = store.getPlaylistSize();\n    store.addCreateSongTransaction(\n      playlistSize,\n      \"Untitled\",\n      \"?\",\n      \"dQw4w9WgXcQ\"\n    );\n  };\n  // THIS FUNCDTION ADDS A CreateSong_Transaction TO THE TRANSACTION STACK\n  store.addCreateSongTransaction = (index, title, artist, youTubeId) => {\n    // ADD A SONG ITEM AND ITS NUMBER\n    let song = {\n      title: title,\n      artist: artist,\n      youTubeId: youTubeId,\n    };\n    let transaction = new CreateSong_Transaction(store, index, song);\n    tps.addTransaction(transaction);\n  };\n  store.addMoveSongTransaction = function (start, end) {\n    let transaction = new MoveSong_Transaction(store, start, end);\n    tps.addTransaction(transaction);\n  };\n  // THIS FUNCTION ADDS A RemoveSong_Transaction TO THE TRANSACTION STACK\n  store.addRemoveSongTransaction = () => {\n    let index = store.deleteSongIndex;\n    let song = store.currentList.songs[index];\n    let transaction = new RemoveSong_Transaction(store, index, song);\n    tps.addTransaction(transaction);\n  };\n  store.addUpdateSongTransaction = function (index, newSongData) {\n    let song = store.currentList.songs[index];\n    let oldSongData = {\n      title: song.title,\n      artist: song.artist,\n      youTubeId: song.youTubeId,\n    };\n    let transaction = new UpdateSong_Transaction(\n      this,\n      index,\n      oldSongData,\n      newSongData\n    );\n    tps.addTransaction(transaction);\n  };\n  store.updateCurrentList = async function () {\n    const response = await api.updatePlaylistById(\n      store.currentList._id,\n      store.currentList\n    );\n    if (response.data.success) {\n      storeReducer({\n        type: GlobalStoreActionType.SET_CURRENT_LIST,\n        payload: store.currentList,\n      });\n    }\n  };\n  store.undo = function () {\n    tps.undoTransaction();\n  };\n  store.redo = function () {\n    tps.doTransaction();\n  };\n  store.canAddNewSong = function () {\n    return store.currentList !== null;\n  };\n  store.canUndo = function () {\n    return store.currentList !== null && tps.hasTransactionToUndo();\n  };\n  store.canRedo = function () {\n    return store.currentList !== null && tps.hasTransactionToRedo();\n  };\n  store.canClose = function () {\n    return store.currentList !== null;\n  };\n\n  // THIS FUNCTION ENABLES THE PROCESS OF EDITING A LIST NAME\n  store.setIsListNameEditActive = function () {\n    storeReducer({\n      type: GlobalStoreActionType.SET_LIST_NAME_EDIT_ACTIVE,\n      payload: null,\n    });\n  };\n\n  return (\n    <GlobalStoreContext.Provider\n      value={{\n        store,\n      }}\n    >\n      {props.children}\n    </GlobalStoreContext.Provider>\n  );\n}\n\nexport default GlobalStoreContext;\nexport { GlobalStoreContextProvider };\n","export default __webpack_public_path__ + \"static/media/Playlister.49a61de7.png\";","import { useContext } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\nimport Button from \"@mui/material/Button\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RedoIcon from \"@mui/icons-material/Redo\";\nimport UndoIcon from \"@mui/icons-material/Undo\";\nimport CloseIcon from \"@mui/icons-material/HighlightOff\";\nimport { useHistory } from \"react-router-dom\";\n\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\nfunction EditToolbar() {\n  const { store } = useContext(GlobalStoreContext);\n  const history = useHistory();\n\n  function handleAddNewSong() {\n    store.addNewSong();\n  }\n  function handleUndo() {\n    store.undo();\n  }\n  function handleRedo() {\n    store.redo();\n  }\n  async function handleClose() {\n    await store.closeCurrentList();\n    history.push(\"/\");\n  }\n  return (\n    <div id=\"edit-toolbar\">\n      <Button\n        disabled={!store.canAddNewSong()}\n        id=\"add-song-button\"\n        onClick={handleAddNewSong}\n        variant=\"contained\"\n      >\n        <AddIcon />\n      </Button>\n      <Button\n        disabled={!store.canUndo()}\n        id=\"undo-button\"\n        onClick={handleUndo}\n        variant=\"contained\"\n      >\n        <UndoIcon />\n      </Button>\n      <Button\n        disabled={!store.canRedo()}\n        id=\"redo-button\"\n        onClick={handleRedo}\n        variant=\"contained\"\n      >\n        <RedoIcon />\n      </Button>\n      <Button\n        disabled={!store.canClose()}\n        id=\"close-button\"\n        onClick={handleClose}\n        variant=\"contained\"\n      >\n        <CloseIcon />\n      </Button>\n    </div>\n  );\n}\n\nexport default EditToolbar;\n","import { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../auth\";\nimport { GlobalStoreContext } from \"../store\";\nimport logo from \"../Playlister.png\";\n\nimport EditToolbar from \"./EditToolbar\";\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default function AppBanner() {\n  const { auth } = useContext(AuthContext);\n  const { store } = useContext(GlobalStoreContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    console.log(event.currentTarget);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    auth.logoutUser();\n    handleMenuClose();\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const loggedOutMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    ></Menu>\n  );\n  const loggedInMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleLogout}>Logout</MenuItem>\n    </Menu>\n  );\n\n  let editToolbar = \"\";\n  let menu = loggedOutMenu;\n  if (auth.loggedIn) {\n    menu = loggedInMenu;\n    /*if (store.currentList) {\n      editToolbar = <EditToolbar />;\n    }*/\n  }\n\n  function getAccountMenu(loggedIn) {\n    let userInitials = auth.getUserInitials();\n    if (loggedIn) return userInitials;\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" style={{ background: \"#2E3B55\" }}>\n        <Toolbar>\n          <Typography\n            variant=\"h4\"\n            noWrap\n            component=\"div\"\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\n          >\n            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n              <img src={logo} style={{ height: \"12%\", width: \"12%\" }}></img>\n            </Link>\n          </Typography>\n          <Box sx={{ flexGrow: 1 }}>{editToolbar}</Box>\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n            <IconButton\n              size=\"large\"\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              {getAccountMenu(auth.loggedIn)}\n            </IconButton>\n          </Box>\n          {/*auth.loggedIn && <MenuItem onClick={handleLogout}>Logout</MenuItem>*/}\n        </Toolbar>\n      </AppBar>\n      {menu}\n    </Box>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\nimport Grid from \"@mui/material/Grid\";\n\nfunction SongCard(props) {\n  const { store } = useContext(GlobalStoreContext);\n  const [draggedTo, setDraggedTo] = useState(0);\n  const { song, index } = props;\n\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"song\", index);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    setDraggedTo(false);\n  }\n\n  async function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"song\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n\n    setDraggedTo(false);\n\n    // ASK THE MODEL TO MOVE THE DATA\n    let index1 = parseInt(targetId.substring(0, 1));\n    let index2 = parseInt(sourceId.substring(0, 1));\n\n    // UPDATE THE LIST\n    await store.addMoveSongTransaction(index2, index1);\n  }\n  function handleRemoveSong(event) {\n    console.log(\"remove song?\");\n    store.showRemoveSongModal(index, song);\n  }\n  function handleClick(event) {\n    console.log(event.target);\n    if (event.detail === 2) {\n      console.log(\"double click\");\n      store.showEditSongModal(index, song);\n    } else {\n      store.updatePlaySong(index);\n    }\n  }\n\n  let cardClass = \"list-card unselected-list-card\";\n  if (index === store.currentPlayIndex)\n    cardClass = \"list-card selected-list-card\";\n  return (\n    <Grid container>\n      <Grid xs={10}>\n        <div\n          key={index}\n          id={\"song-\" + index + \"-card\"}\n          className={cardClass}\n          onDragStart={handleDragStart}\n          onDragOver={handleDragOver}\n          onDragEnter={handleDragEnter}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n          draggable=\"true\"\n          onClick={handleClick}\n        >\n          {index + 1}.{song.title} by {song.artist}\n        </div>\n      </Grid>\n      <Grid xs={2}>\n        <input\n          type=\"button\"\n          id={\"remove-song-\" + index}\n          className=\"list-card-button\"\n          value={\"\\u2715\"}\n          onClick={handleRemoveSong}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default SongCard;\n","import React, { useContext, useState } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\n\nfunction AddSongButton(props) {\n  const { store } = useContext(GlobalStoreContext);\n  const [draggedTo, setDraggedTo] = useState(0);\n  const { song, index } = props;\n\n  async function handleClick(event) {\n    console.log(\"clicking + button\");\n    await store.addNewSong();\n  }\n\n  let cardClass = \"list-card unselected-list-card\";\n  return (\n    <div\n      key={index}\n      id={\"song-\" + index + \"-card\"}\n      className={cardClass}\n      onClick={handleClick}\n    >\n      +\n    </div>\n  );\n}\n\nexport default AddSongButton;\n","import { useContext } from \"react\";\nimport GlobalStoreContext from \"../store\";\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Button from \"@mui/material/Button\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function MUIRemoveSongModal() {\n  const { store } = useContext(GlobalStoreContext);\n\n  function handleConfirmRemoveSong() {\n    store.addRemoveSongTransaction();\n  }\n\n  function handleCancelRemoveSong() {\n    store.hideModals();\n  }\n\n  let modalClass = \"modal\";\n  if (store.isRemoveSongModalOpen()) {\n    modalClass += \" is-visible\";\n  }\n  let songTitle = \"\";\n  if (store.currentSong) {\n    songTitle = store.currentSong.title;\n  }\n\n  return (\n    <Modal open={store.deleteSong !== null}>\n      <Box sx={style}>\n        <div className=\"modal-dialog\" data-animation=\"slideInOutLeft\">\n          <header className=\"dialog-header\">\n            Delete {store.deleteSong.title} from the playlist?\n          </header>\n          <div id=\"confirm-cancel-container\">\n            <Button\n              id=\"dialog-yes-button\"\n              className=\"modal-button\"\n              onClick={handleConfirmRemoveSong}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Confirm\n            </Button>\n            <Button\n              id=\"dialog-no-button\"\n              className=\"modal-button\"\n              onClick={handleCancelRemoveSong}\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n","import { useContext, useState } from \"react\";\nimport GlobalStoreContext from \"../store\";\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Button from \"@mui/material/Button\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function MUIEditSongModal() {\n  const { store } = useContext(GlobalStoreContext);\n  const [title, setTitle] = useState(store.currentSong.title);\n  const [artist, setArtist] = useState(store.currentSong.artist);\n  const [youTubeId, setYouTubeId] = useState(store.currentSong.youTubeId);\n\n  function handleConfirmEditSong() {\n    let newSongData = {\n      title: title,\n      artist: artist,\n      youTubeId: youTubeId,\n    };\n    store.addUpdateSongTransaction(store.currentSongIndex, newSongData);\n  }\n\n  function handleCancelEditSong() {\n    store.hideModals();\n  }\n\n  function handleUpdateTitle(event) {\n    setTitle(event.target.value);\n  }\n\n  function handleUpdateArtist(event) {\n    setArtist(event.target.value);\n  }\n\n  function handleUpdateYouTubeId(event) {\n    setYouTubeId(event.target.value);\n  }\n  console.log(store);\n  return (\n    <Modal open={store.currentSong !== null}>\n      <Box sx={style}>\n        <div\n          id=\"modal-dialog\"\n          className=\"modal-dialog\"\n          data-animation=\"slideInOutLeft\"\n        >\n          <div id=\"dialog-header\">\n            <div className=\"\">\n              <h2>Edit Song</h2>\n            </div>\n            <div id=\"dialog-header\" className=\"modal-center\">\n              <div id=\"title-prompt\" className=\"modal-prompt\">\n                Title:\n              </div>\n              <input\n                id=\"edit-song-modal-title-textfield\"\n                className=\"modal-textfield\"\n                type=\"text\"\n                defaultValue={title}\n                onChange={handleUpdateTitle}\n              />\n              <div id=\"artist-prompt\" className=\"modal-prompt\">\n                Artist:\n              </div>\n              <input\n                id=\"edit-song-modal-artist-textfield\"\n                className=\"modal-textfield\"\n                type=\"text\"\n                defaultValue={artist}\n                onChange={handleUpdateArtist}\n              />\n              <div id=\"you-tube-id-prompt\" className=\"modal-prompt\">\n                You Tube Id:\n              </div>\n              <input\n                id=\"edit-song-modal-youTubeId-textfield\"\n                className=\"modal-textfield\"\n                type=\"text\"\n                defaultValue={youTubeId}\n                onChange={handleUpdateYouTubeId}\n              />\n            </div>\n            <div className=\"confirm-cancel-container\">\n              <Button\n                id=\"dialog-yes-button\"\n                className=\"modal-button\"\n                onClick={handleConfirmEditSong}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Confirm\n              </Button>\n              <Button\n                id=\"dialog-no-button\"\n                className=\"modal-button\"\n                onClick={handleCancelEditSong}\n                color=\"secondary\"\n                variant=\"contained\"\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n","import { useContext } from \"react\";\nimport GlobalStoreContext from \"../store\";\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Button from \"@mui/material/Button\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function MUIDeleteModal() {\n  const { store } = useContext(GlobalStoreContext);\n  let name = \"\";\n  if (store.listMarkedForDeletion) {\n    name = store.listMarkedForDeletion.name;\n  }\n  async function handleDeleteList(event) {\n    await store.deleteMarkedList();\n    await store.loadIdNamePairs();\n  }\n  function handleCloseModal(event) {\n    store.unmarkListForDeletion();\n  }\n\n  return (\n    <Modal open={store.listMarkedForDeletion !== null}>\n      <Box sx={style}>\n        <div className=\"modal-dialog\">\n          <header className=\"dialog-header\">\n            Delete {name} from Playlister?\n          </header>\n          <div id=\"confirm-cancel-container\">\n            <Button\n              id=\"dialog-yes-button\"\n              className=\"modal-button\"\n              onClick={handleDeleteList}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Confirm\n            </Button>\n            <Button\n              id=\"dialog-no-button\"\n              className=\"modal-button\"\n              onClick={handleCloseModal}\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n        {!store.listMarkedForDeletion && <div></div>}\n      </Box>\n    </Modal>\n  );\n}\n","import { useContext, useEffect } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { Modal, Alert, Button } from \"@mui/material\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function MUIPlaylistExists() {\n  const { store } = useContext(GlobalStoreContext);\n\n  useEffect(() => {}, []);\n\n  const hideModal = () => {\n    store.hideModals();\n  };\n\n  return (\n    <Modal open={store.currentModal === \"PLAYLIST_EXISTS\"}>\n      <Box sx={style}>\n        <Alert severity=\"warning\">Playlist name already exists.</Alert>\n        <Button\n          id=\"dialog-yes-button\"\n          className=\"modal-button\"\n          onClick={hideModal}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Confirm\n        </Button>\n      </Box>\n    </Modal>\n  );\n}\n","import { useContext, useState, useEffect } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ListItem from \"@mui/material/ListItem\";\nimport TextField from \"@mui/material/TextField\";\nimport ThumbUpOffAltIcon from \"@mui/icons-material/ThumbUpOffAlt\";\nimport ThumbDownOffAltIcon from \"@mui/icons-material/ThumbDownOffAlt\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport SongCard from \"./SongCard.js\";\nimport List from \"@mui/material/List\";\nimport Button from \"@mui/material/Button\";\nimport AddSongButton from \"./AddSongButton.js\";\nimport MUIRemoveSongModal from \"./MUIRemoveSongModal\";\nimport MUIEditSongModal from \"./MUIEditSongModal\";\nimport MUIDeleteModal from \"./MUIDeleteModal\";\nimport MUIPlaylistExists from \"./MUIPlaylistExists\";\n\n/*\n    This is a card in our list of top 5 lists. It lets select\n    a list for editing and it has controls for changing its \n    name or deleting it.\n    \n    @author McKilla Gorilla\n*/\nfunction ListCard(props) {\n  const { store } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [text, setText] = useState(\"\");\n  const { playlist, selected } = props;\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  useEffect(async () => {\n    console.log(\"this is actially changing2\");\n  }, []);\n\n  async function expand() {\n    if (!isExpanded) {\n      // if expanded\n      if (store.currentList === null) {\n        setIsExpanded(!isExpanded);\n        await store.setCurrentList(playlist._id);\n      }\n    } else {\n      setIsExpanded(!isExpanded);\n      await store.closeCurrentList();\n    }\n  }\n\n  function handleDoubleClick(event) {\n    console.log(event.target);\n    if (event.detail === 2 && store.currentList === null) {\n      setEditActive(true);\n      // store.showEditSongModal(index, song);\n    }\n  }\n\n  function handleLoadList(event, id) {\n    console.log(\"handleLoadList for \" + id);\n    if (!event.target.disabled) {\n      let _id = event.target.id;\n      if (_id.indexOf(\"list-card-text-\") >= 0)\n        _id = (\"\" + _id).substring(\"list-card-text-\".length);\n\n      console.log(\"load \" + event.target.id);\n\n      // CHANGE THE CURRENT LIST\n      store.setCurrentList(id);\n    }\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    setEditActive(false);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      let response = store.changeListName(id, text);\n      if (response === false) return;\n      toggleEdit();\n    }\n  }\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  }\n\n  const handleKeyDown = async (event) => {\n    console.log(\"key downnnnn\");\n    if (event.keyCode === 90 && event.ctrlKey) {\n      let res = await store.canUndo();\n      if (res) await store.undo();\n    }\n\n    if (event.keyCode === 89 && event.ctrlKey) {\n      let res = await store.canRedo();\n      if (res) await store.redo();\n    }\n  };\n\n  let selectClass = \"unselected-list-card\";\n  if (selected) {\n    selectClass = \"selected-list-card\";\n  }\n  let cardStatus = false;\n  if (store.isListNameEditActive) {\n    cardStatus = true;\n  }\n  let modalJSX = \"\";\n  if (store.isRemoveSongModalOpen()) {\n    console.log(store.removeSong);\n    modalJSX = <MUIRemoveSongModal />;\n  } else if (store.isEditSongModalOpen()) {\n    console.log(\"edit song modal is open\");\n    modalJSX = <MUIEditSongModal />;\n  } else if (store.isPlaylistExistsModalOpen()) {\n    modalJSX = <MUIPlaylistExists />;\n  }\n\n  function handleUndo() {\n    store.undo();\n  }\n\n  function handleRedo() {\n    store.redo();\n  }\n\n  async function handleDeleteList() {\n    store.markListForDeletion(playlist._id);\n  }\n\n  async function handlePublish() {\n    await store.publishPlaylist();\n    expand();\n  }\n\n  async function handleDuplicate() {\n    store.duplicateOwnList(playlist);\n    expand();\n  }\n\n  let cardElement = (\n    <ListItem\n      id={playlist._id}\n      key={playlist._id}\n      sx={{ display: \"flex\", p: 1 }}\n      style={{\n        width: \"100%\",\n        border: \"1px solid\",\n        borderRadius: \"5px\",\n        marginBottom: \"20px\",\n      }}\n      button\n    >\n      <Grid\n        container\n        onClick={handleDoubleClick}\n        onKeyDown={handleKeyDown}\n        tabIndex=\"0\"\n      >\n        <Grid item xs={6}>\n          {!editActive && <h2>{playlist.name}</h2>}\n          {editActive && (\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id={\"list-\" + playlist._id}\n              label=\"Playlist Name\"\n              name=\"name\"\n              autoComplete=\"Playlist Name\"\n              className=\"list-card\"\n              onKeyPress={handleKeyPress}\n              onChange={handleUpdateText}\n              defaultValue={playlist.name}\n              inputProps={{ style: { fontSize: 30 } }}\n              InputLabelProps={{ style: { fontSize: 24 } }}\n              autoFocus\n            />\n          )}\n          <p>By {playlist.ownerName}</p>\n        </Grid>\n        <Grid item xs={6} />\n\n        {isExpanded && (\n          <Grid container onClick={handleDoubleClick}>\n            <Grid item xs={12}>\n              <Box tabIndex=\"0\" sx={{ maxHeight: \"300px\", overflow: \"scroll\" }}>\n                <List\n                  id=\"playlist-cards\"\n                  sx={{ width: \"100%\", bgcolor: \"background.paper\" }}\n                >\n                  {store.currentList &&\n                    store.currentList.songs.map((song, index) => (\n                      <SongCard\n                        id={\"playlist-song-\" + index}\n                        key={\"playlist-song-\" + index}\n                        index={index}\n                        song={song}\n                      />\n                    ))}\n                </List>\n              </Box>\n            </Grid>\n            <Grid item xs={12}>\n              <AddSongButton />\n            </Grid>\n            <Grid item xs={2}>\n              <Button onClick={handleUndo}>Undo</Button>\n            </Grid>\n            <Grid item xs={2}>\n              <Button onClick={handleRedo}>Redo</Button>\n            </Grid>\n            <Grid item xs={2}></Grid>\n            <Grid item xs={2}>\n              <Button onClick={handlePublish}>Publish</Button>\n            </Grid>\n            <Grid item xs={2}>\n              <Button onClick={handleDeleteList}>Delete</Button>\n            </Grid>\n            <Grid item xs={2}>\n              <Button onClick={handleDuplicate}>Duplicate</Button>\n            </Grid>\n          </Grid>\n        )}\n        <Grid item xs={9}></Grid>\n        <Grid item xs={3}>\n          {!isExpanded && <ExpandMoreIcon onClick={expand} />}\n          {isExpanded && <ExpandLessIcon onClick={expand} />}\n        </Grid>\n      </Grid>\n      {modalJSX}\n      <MUIDeleteModal />\n    </ListItem>\n  );\n\n  return cardElement;\n}\n\nexport default ListCard;\n","import { useContext, useState, useEffect } from \"react\";\nimport AuthContext from \"../auth\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport { GlobalStoreContext } from \"../store\";\nimport Button from \"@mui/material/Button\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport GroupsIcon from \"@mui/icons-material/Groups\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport TextField from \"@mui/material/TextField\";\nimport SortIcon from \"@mui/icons-material/Sort\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { FormControl, InputLabel, Select, Grid } from \"@mui/material\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\n\nexport default function MenuBar() {\n  const { auth } = useContext(AuthContext);\n  const { store } = useContext(GlobalStoreContext);\n  const [menu, setMenu] = useState(auth.user === null ? 1 : 0);\n  const [sort, setSort] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n\n  const handleHome = () => {\n    if (auth.user !== null) {\n      auth.goHome();\n      setSort(\"\");\n      store.updateQueries(-1, \"\");\n      setMenu(0);\n      setSearch(\"\");\n    }\n  };\n  const handleAllLists = () => {\n    auth.goAllLists();\n    setSort(\"\");\n    store.updateQueries(-1, \"\");\n    setMenu(1);\n    setSearch(\"\");\n  };\n  const handleUsers = () => {\n    auth.goAllLists();\n    setSort(\"\");\n    store.updateQueries(-1, \"\");\n    setMenu(2);\n    setSearch(\"\");\n  };\n\n  const handleSearch = (e) => {\n    if (e.keyCode === 13) {\n      let arr = [\n        \"Name (A-Z)\",\n        \"Publish Date (Newest)\",\n        \"Listens (High - Low)\",\n        \"Likes (High - Low)\",\n        \"Dislikes (High - Low)\",\n      ];\n      let index = arr.indexOf(sort);\n      // console.log(e.target.value);\n      setSearch(e.target.value);\n      store.updateQueries(index, e.target.value).then((event) => {\n        store.loadIdNamePairs2(index, e.target.value, menu == 2);\n      });\n    }\n  };\n\n  const handleChange = async (event) => {\n    setSort(event.target.value);\n    let arr = [\n      \"Name (A-Z)\",\n      \"Publish Date (Newest)\",\n      \"Listens (High - Low)\",\n      \"Likes (High - Low)\",\n      \"Dislikes (High - Low)\",\n    ];\n    let index = arr.indexOf(event.target.value);\n    store.updateQueries(index, search).then((e) => {\n      store.loadIdNamePairs2(index, search);\n    });\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" style={{ background: \"#75816b\" }}>\n        <Toolbar>\n          <Grid container>\n            <Grid xs={1}>\n              {auth.user !== null && menu === 0 && (\n                <HomeIcon\n                  onClick={handleHome}\n                  style={{ border: \"1px solid\" }}\n                />\n              )}\n              {auth.user !== null && menu !== 0 && (\n                <HomeIcon onClick={handleHome} />\n              )}\n            </Grid>\n            <Grid xs={1}>\n              {menu === 1 && (\n                <GroupsIcon\n                  onClick={handleAllLists}\n                  style={{ border: \"1px solid\" }}\n                />\n              )}\n              {menu !== 1 && <GroupsIcon onClick={handleAllLists} />}\n            </Grid>\n            <Grid xs={1}>\n              {menu === 2 && (\n                <AccountCircleIcon\n                  onClick={handleUsers}\n                  style={{ border: \"1px solid\" }}\n                />\n              )}\n              {menu !== 2 && <AccountCircleIcon onClick={handleUsers} />}\n            </Grid>\n            <Grid xs={6}>\n              <TextField\n                id=\"search-bar\"\n                className=\"text\"\n                label=\"Search\"\n                variant=\"outlined\"\n                placeholder=\"Search...\"\n                size=\"small\"\n                onKeyDown={handleSearch}\n                style={{ width: \"90%\", fill: \"blue\", background: \"white\" }}\n              />\n              <IconButton type=\"submit\" aria-label=\"search\">\n                <SearchIcon style={{ fill: \"blue\" }} />\n              </IconButton>\n            </Grid>\n            <Grid xs={3}>\n              {/*<FormControl>\n                <InputLabel>Sort by</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  label=\"Sort by\"\n                  value={sort}\n                  onChange={handleChange}\n                  defaultValue=\"default\"\n                >\n                  <MenuItem value=\"Name (A-Z)\" id={0}>\n                    Name (A-Z)\n                  </MenuItem>\n                  <MenuItem value=\"Publish Date (Newest)\" id={1}>\n                    Publish Date (Newest)\n                  </MenuItem>\n                  <MenuItem value=\"Listens (High - Low)\" id={2}>\n                    Listens (High - Low)\n                  </MenuItem>\n                  <MenuItem value=\"Likes (High - Low)\" id={3}>\n                    Likes (High - Low)\n                  </MenuItem>\n                  <MenuItem value=\"Dislikes (High - Low)\" id={4}>\n                    Dislikes (High - Low)\n                  </MenuItem>\n                </Select>\n              </FormControl>*/}\n              <FormControl style={{ background: \"white\", width: \"90%\" }}>\n                <InputLabel>Sort By...</InputLabel>\n                <Select value={sort} onChange={handleChange}>\n                  <MenuItem value=\"Name (A-Z)\" id={0}>\n                    Name (A-Z)\n                  </MenuItem>\n                  <MenuItem value=\"Publish Date (Newest)\" id={1}>\n                    Publish Date (Newest)\n                  </MenuItem>\n                  <MenuItem value=\"Listens (High - Low)\" id={2}>\n                    Listens (High - Low)\n                  </MenuItem>\n                  <MenuItem value=\"Likes (High - Low)\" id={3}>\n                    Likes (High - Low)\n                  </MenuItem>\n                  <MenuItem value=\"Dislikes (High - Low)\" id={4}>\n                    Dislikes (High - Low)\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\n\nfunction SongCard2(props) {\n  const { store } = useContext(GlobalStoreContext);\n  const [draggedTo, setDraggedTo] = useState(0);\n  const { song, index } = props;\n\n  function handleClick(event) {\n    store.updatePlaySong(index);\n  }\n\n  let cardClass = \"list-card unselected-list-card\";\n  if (index === store.currentPlayIndex) {\n    cardClass = \"list-card selected-list-card\";\n  }\n  return (\n    <div\n      key={index}\n      id={\"song-\" + index + \"-card\"}\n      className={cardClass}\n      onClick={handleClick}\n    >\n      {index + 1}.{song.title} by {song.artist}\n    </div>\n  );\n}\n\nexport default SongCard2;\n","import { useContext, useState, useEffect } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\nimport AuthContext from \"../auth\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport ListItem from \"@mui/material/ListItem\";\nimport TextField from \"@mui/material/TextField\";\nimport ThumbUpOffAltIcon from \"@mui/icons-material/ThumbUpOffAlt\";\nimport ThumbDownOffAltIcon from \"@mui/icons-material/ThumbDownOffAlt\";\nimport ThumbDownIcon from \"@mui/icons-material/ThumbDown\";\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport SongCard2 from \"./SongCard2.js\";\nimport List from \"@mui/material/List\";\nimport Button from \"@mui/material/Button\";\n\n/*\n    This is a card in our list of top 5 lists. It lets select\n    a list for editing and it has controls for changing its \n    name or deleting it.\n    \n    @author McKilla Gorilla\n*/\nfunction ListCard2(props) {\n  const { store } = useContext(GlobalStoreContext);\n  const { auth } = useContext(AuthContext);\n  const [editActive, setEditActive] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const { playlist, selected } = props;\n  const [liked, setLiked] = useState(false);\n  const [disliked, setDisliked] = useState(false);\n\n  useEffect(() => {\n    if (auth.user !== null) {\n      let index = playlist.likes.indexOf(auth.user.email);\n      if (index > -1) {\n        setLiked(true);\n      }\n\n      index = playlist.dislikes.indexOf(auth.user.email);\n      if (index > -1) {\n        setDisliked(true);\n      }\n    }\n  });\n\n  function handleLoadList(event, id) {\n    console.log(\"handleLoadList for \" + id);\n    if (!event.target.disabled) {\n      let _id = event.target.id;\n      if (_id.indexOf(\"list-card-text-\") >= 0)\n        _id = (\"\" + _id).substring(\"list-card-text-\".length);\n\n      console.log(\"load \" + event.target.id);\n\n      // CHANGE THE CURRENT LIST\n      store.setCurrentList(id);\n    }\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n    if (newActive) {\n      store.setIsListNameEditActive();\n    }\n    setEditActive(newActive);\n  }\n\n  async function handleDeleteList(event, id) {\n    event.stopPropagation();\n    let _id = event.target.id;\n    _id = (\"\" + _id).substring(\"delete-list-\".length);\n    store.markListForDeletion(id);\n  }\n\n  async function handleLike() {\n    if (auth.user === null) return;\n    if (!disliked) {\n      await store.likePlaylist(playlist._id, 1);\n      setLiked(true);\n    }\n  }\n\n  async function handleUnLike() {\n    if (auth.user === null) return;\n    await store.dislikePlaylist(playlist._id, 1);\n    setLiked(false);\n  }\n\n  async function handleDislike() {\n    if (auth.user === null) return;\n    if (!liked) {\n      await store.likePlaylist(playlist._id, 2);\n      setDisliked(true);\n    }\n  }\n\n  async function handleUnDislike() {\n    if (auth.user === null) return;\n    await store.dislikePlaylist(playlist._id, 2);\n    setDisliked(false);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      store.changeListName(id, text);\n      toggleEdit();\n    }\n  }\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  }\n\n  async function expand() {\n    if (!isExpanded) {\n      if (store.currentList === null) {\n        setIsExpanded(!isExpanded);\n        await store.setCurrentList(playlist._id);\n      }\n    } else {\n      setIsExpanded(!isExpanded);\n      await store.closeCurrentList();\n    }\n  }\n\n  async function handleDuplicate() {\n    store.duplicateOwnList(playlist);\n    expand();\n  }\n\n  let selectClass = \"unselected-list-card\";\n  if (selected) {\n    selectClass = \"selected-list-card\";\n  }\n  let cardStatus = false;\n  if (store.isListNameEditActive) {\n    cardStatus = true;\n  }\n  let cardElement = (\n    <ListItem\n      id={playlist._id}\n      key={playlist._id}\n      sx={{ display: \"flex\", p: 1 }}\n      style={{\n        width: \"100%\",\n        fontSize: \"25xpt\",\n        border: \"1px solid\",\n        borderRadius: \"5px\",\n        marginBottom: \"20px\",\n      }}\n      button\n      /*onClick={(event) => {\n        handleLoadList(event, playlist._id);\n      }}*/\n    >\n      <Grid container>\n        <Grid item xs={6}>\n          <h2>{playlist.name}</h2>\n          <p>By {playlist.ownerName}</p>\n        </Grid>\n        <Grid item xs={3}>\n          {!liked && <ThumbUpOffAltIcon onClick={handleLike} />}\n          {liked && <ThumbUpIcon onClick={handleUnLike} />}\n          {playlist.likes.length}\n        </Grid>\n        <Grid item xs={3}>\n          {!disliked && <ThumbDownOffAltIcon onClick={handleDislike} />}\n          {disliked && <ThumbDownIcon onClick={handleUnDislike} />}\n          {playlist.dislikes.length}\n        </Grid>\n        {isExpanded && (\n          <Grid container>\n            <Grid item xs={12}>\n              <Box tabIndex=\"0\" sx={{ maxHeight: \"300px\", overflow: \"scroll\" }}>\n                <List\n                  id=\"playlist-cards\"\n                  sx={{ width: \"100%\", bgcolor: \"background.paper\" }}\n                >\n                  {playlist &&\n                    playlist.songs.map((song, index) => (\n                      <SongCard2\n                        id={\"playlist-song-\" + index}\n                        key={\"playlist-song-\" + index}\n                        index={index}\n                        song={song}\n                      />\n                    ))}\n                </List>\n              </Box>\n            </Grid>\n            {auth.user !== null && (\n              <Button onClick={handleDuplicate}>Duplicate</Button>\n            )}\n          </Grid>\n        )}\n        <Grid item xs={6}>\n          <p>Published: {playlist.publishedDate.substring(0, 10)}</p>\n        </Grid>\n        <Grid item xs={3}>\n          <p>Listens: {playlist.listens}</p>\n        </Grid>\n        <Grid item xs={3}>\n          {!isExpanded && <ExpandMoreIcon onClick={expand} />}\n          {isExpanded && <ExpandLessIcon onClick={expand} />}\n        </Grid>\n      </Grid>\n    </ListItem>\n  );\n\n  if (editActive) {\n    cardElement = (\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id={\"list-\" + playlist._id}\n        label=\"Playlist Name\"\n        name=\"name\"\n        autoComplete=\"Playlist Name\"\n        className=\"list-card\"\n        onKeyPress={handleKeyPress}\n        onChange={handleUpdateText}\n        defaultValue={playlist.name}\n        inputProps={{ style: { fontSize: 48 } }}\n        InputLabelProps={{ style: { fontSize: 24 } }}\n        autoFocus\n      />\n    );\n  }\n  return cardElement;\n}\n\nexport default ListCard2;\n","import React, { useContext, useEffect } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\nimport ListCard2 from \"./ListCard2.js\";\n\nimport List from \"@mui/material/List\";\n\nconst AllPlaylists = () => {\n  useEffect(async () => {\n    await store.loadIdNamePairs();\n  }, []);\n  const { store } = useContext(GlobalStoreContext);\n\n  let listCard = \"\";\n\n  if (store) {\n    listCard = (\n      <List sx={{ width: \"90%\", left: \"5%\", bgcolor: \"background.paper\" }}>\n        {store.allPlaylists.map((playlist) => (\n          <ListCard2 key={playlist._id} playlist={playlist} selected={false} />\n        ))}\n      </List>\n    );\n  }\n\n  return (\n    <div>\n      <h1>All Published Playlists</h1>\n      <div id=\"list-selector-list\">{listCard}</div>\n    </div>\n  );\n};\n\nexport default AllPlaylists;\n","import { useContext, useState, useEffect } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport ListItem from \"@mui/material/ListItem\";\nimport TextField from \"@mui/material/TextField\";\nimport ThumbUpOffAltIcon from \"@mui/icons-material/ThumbUpOffAlt\";\nimport ThumbDownOffAltIcon from \"@mui/icons-material/ThumbDownOffAlt\";\nimport ThumbDownIcon from \"@mui/icons-material/ThumbDown\";\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport SongCard2 from \"./SongCard2.js\";\nimport List from \"@mui/material/List\";\nimport Button from \"@mui/material/Button\";\nimport AuthContext from \"../auth\";\n\n/*\n    This is a card in our list of top 5 lists. It lets select\n    a list for editing and it has controls for changing its \n    name or deleting it.\n    \n    @author McKilla Gorilla\n*/\nfunction ListCard2(props) {\n  const { store } = useContext(GlobalStoreContext);\n  const { auth } = useContext(AuthContext);\n  const [editActive, setEditActive] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { playlist, selected } = props;\n  const [liked, setLiked] = useState(false);\n  const [disliked, setDisliked] = useState(false);\n\n  useEffect(() => {\n    let index = playlist.likes.indexOf(auth.user.email);\n    if (index > -1) {\n      setLiked(true);\n    }\n\n    index = playlist.dislikes.indexOf(auth.user.email);\n    if (index > -1) {\n      setDisliked(true);\n    }\n  });\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n    if (newActive) {\n      store.setIsListNameEditActive();\n    }\n    setEditActive(newActive);\n  }\n  async function handleDeleteList() {\n    store.markListForDeletion(playlist._id);\n    expand();\n  }\n\n  async function handleDuplicate() {\n    store.duplicateOwnList(playlist);\n    expand();\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      store.changeListName(id, text);\n      toggleEdit();\n    }\n  }\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  }\n\n  async function handleLike() {\n    if (!disliked) {\n      await store.likePlaylist(playlist._id, 1);\n      setLiked(true);\n    }\n  }\n\n  async function handleUnLike() {\n    await store.dislikePlaylist(playlist._id, 1);\n    setLiked(false);\n  }\n\n  async function handleDislike() {\n    if (!liked) {\n      await store.likePlaylist(playlist._id, 2);\n      setDisliked(true);\n    }\n  }\n\n  async function handleUnDislike() {\n    await store.dislikePlaylist(playlist._id, 2);\n    setDisliked(false);\n  }\n\n  async function expand() {\n    if (!isExpanded) {\n      // if expanded\n      if (store.currentList === null) {\n        setIsExpanded(!isExpanded);\n        await store.setCurrentList(playlist._id);\n        /*if (playlist.published) {\n          await store.addListen();\n        }*/\n      }\n    } else {\n      setIsExpanded(!isExpanded);\n      await store.closeCurrentList();\n    }\n  }\n\n  let selectClass = \"unselected-list-card\";\n  if (selected) {\n    selectClass = \"selected-list-card\";\n  }\n  let cardStatus = false;\n  if (store.isListNameEditActive) {\n    cardStatus = true;\n  }\n  let cardElement = (\n    <ListItem\n      id={playlist._id}\n      key={playlist._id}\n      sx={{ display: \"flex\", p: 1 }}\n      style={{\n        width: \"100%\",\n        fontSize: \"25xpt\",\n        border: \"1px solid\",\n        borderRadius: \"5px\",\n        marginBottom: \"20px\",\n      }}\n      button\n      /*onClick={(event) => {\n        handleLoadList(event, playlist._id);\n      }}*/\n    >\n      <Grid container>\n        <Grid item xs={6}>\n          <h2>{playlist.name}</h2>\n          <p>By {playlist.ownerName}</p>\n        </Grid>\n        <Grid item xs={3}>\n          {!liked && <ThumbUpOffAltIcon onClick={handleLike} />}\n          {liked && <ThumbUpIcon onClick={handleUnLike} />}\n          {playlist.likes.length}\n        </Grid>\n        <Grid item xs={3}>\n          {!disliked && <ThumbDownOffAltIcon onClick={handleDislike} />}\n          {disliked && <ThumbDownIcon onClick={handleUnDislike} />}\n          {playlist.dislikes.length}\n        </Grid>\n        {isExpanded && (\n          <Grid container>\n            <Grid item xs={12}>\n              <Box tabIndex=\"0\" sx={{ maxHeight: \"300px\", overflow: \"scroll\" }}>\n                <List\n                  id=\"playlist-cards\"\n                  sx={{ width: \"100%\", bgcolor: \"background.paper\" }}\n                >\n                  {playlist &&\n                    playlist.songs.map((song, index) => (\n                      <SongCard2\n                        id={\"playlist-song-\" + index}\n                        key={\"playlist-song-\" + index}\n                        index={index}\n                        song={song}\n                      />\n                    ))}\n                </List>\n              </Box>\n            </Grid>\n            <Grid item xs={2}>\n              <Button onClick={handleDeleteList}>Delete</Button>\n            </Grid>\n            <Grid item xs={2}>\n              <Button onClick={handleDuplicate}>Duplicate</Button>\n            </Grid>\n          </Grid>\n        )}\n        <Grid item xs={6}>\n          <p>Published: {playlist.publishedDate.substring(0, 10)}</p>\n        </Grid>\n        <Grid item xs={3}>\n          <p>Listens: {playlist.listens}</p>\n        </Grid>\n        <Grid item xs={3}>\n          {!isExpanded && <ExpandMoreIcon onClick={expand} />}\n          {isExpanded && <ExpandLessIcon onClick={expand} />}\n        </Grid>\n      </Grid>\n\n      {/*<Box\n        sx={{\n          display: \"grid\",\n          gridTemplateRows: \"repeat(3, 1fr)\",\n          width: \"50%\",\n        }}\n      >\n        <Box sx={{ flexGrow: 1, fontSize: \"15pt\" }}>{playlist.name}</Box>\n\n        <Box sx={{ fontSize: \"5pt\" }}>By {playlist.ownerEmail}</Box>\n\n        <Box sx={{ flexGrow: 1, fontSize: \"5pt\" }}>\n          Insert Published Date right here\n        </Box>\n      </Box>\n\n      <Box\n        sx={{\n          display: \"grid\",\n          gridTemplateRows: \"repeat(2, 1fr)\",\n          width: \"40%\",\n        }}\n      >\n        <Box sx={{}}>\n          X <ThumbUpOffAltIcon />\n          Y <ThumbDownOffAltIcon />\n        </Box>\n        <Box>Listens:</Box>\n      </Box>\n\n      <Box>\n        {!isExpanded && <ExpandMoreIcon onClick={expand} />}\n        {isExpanded && <ExpandLessIcon onClick={expand} />}\n    </Box>*/}\n\n      {/*\n\n      */}\n    </ListItem>\n  );\n\n  if (editActive) {\n    cardElement = (\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id={\"list-\" + playlist._id}\n        label=\"Playlist Name\"\n        name=\"name\"\n        autoComplete=\"Playlist Name\"\n        className=\"list-card\"\n        onKeyPress={handleKeyPress}\n        onChange={handleUpdateText}\n        defaultValue={playlist.name}\n        inputProps={{ style: { fontSize: 48 } }}\n        InputLabelProps={{ style: { fontSize: 24 } }}\n        autoFocus\n      />\n    );\n  }\n  return cardElement;\n}\n\nexport default ListCard2;\n","import React, { useContext, useEffect } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\nimport ListCard from \"./ListCard.js\";\nimport ListCard3 from \"./ListCard3.js\";\nimport Grid from \"@mui/material/Grid\";\nimport AuthContext from \"../auth\";\n\nimport List from \"@mui/material/List\";\n\nconst AllPlaylists = () => {\n  const { store } = useContext(GlobalStoreContext);\n  const { auth } = useContext(AuthContext);\n\n  useEffect(async () => {\n    await store.loadIdNamePairs();\n  }, []);\n\n  let listCard = \"\";\n  let cardClass = \"list-card unselected-list-card\";\n\n  async function handleNewPlaylist() {\n    if (store.currentList === null) await store.createNewList();\n  }\n\n  if (store) {\n    console.log(store.idNamePairs);\n    listCard = (\n      <List sx={{ width: \"90%\", left: \"5%\", bgcolor: \"background.paper\" }}>\n        <div className=\"list-cards-left\">\n          {store.idNamePairs.map(\n            (playlist) =>\n              (!playlist.published && (\n                <ListCard\n                  key={playlist._id}\n                  playlist={playlist}\n                  selected={false}\n                />\n              )) ||\n              (playlist.published && (\n                <ListCard3\n                  key={playlist._id}\n                  playlist={playlist}\n                  selected={false}\n                />\n              ))\n          )}\n        </div>\n\n        <Grid item xs={12}>\n          <div onClick={handleNewPlaylist} className={cardClass}>\n            Create New Playlist\n          </div>\n        </Grid>\n      </List>\n    );\n  }\n\n  return (\n    <div>\n      <h1>Your Playlists</h1>\n      {auth.user !== null && <div id=\"list-selector-list\">{listCard}</div>}\n      {auth.user === null && (\n        <div id=\"list-selector-list\">\n          <h1>Create an account to make your own playlists!</h1>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AllPlaylists;\n","import YouTube from \"react-youtube\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\nimport StopIcon from \"@mui/icons-material/Stop\";\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport Grid from \"@mui/material/Grid\";\n\nexport default function YouTubePlayer(props) {\n  const { store } = useContext(GlobalStoreContext);\n  const [play, setPlay] = useState(false);\n  const { display } = props;\n\n  useEffect(async () => {\n    console.log(\"youtube use effect\");\n  });\n\n  async function loadAndPlayCurrentSong(player) {\n    let song = store.currentList.songs[store.currentPlayIndex].youTubeId;\n    player.loadVideoById(song);\n    player.playVideo();\n  }\n\n  async function incSong() {\n    // setIndex((index + 1) % store.currentList.songs.length);\n    await store.updatePlaySong(\n      (store.currentPlayIndex + 1) % store.currentList.songs.length\n    );\n  }\n\n  async function decSong() {\n    if (store.currentPlayIndex - 1 == -1) {\n      await store.updatePlaySong(store.currentList.songs.length - 1);\n    } else {\n      await store.updatePlaySong(\n        (store.currentPlayIndex - 1) % store.currentList.songs.length\n      );\n    }\n  }\n\n  function onPlayerReady(event) {\n    if (play) {\n      loadAndPlayCurrentSong(event.target);\n      event.target.playVideo();\n    }\n  }\n\n  function stop() {\n    setPlay(false);\n  }\n\n  async function resume() {\n    setPlay(true);\n    await store.addListen();\n  }\n\n  async function onPlayerStateChange(event) {\n    let playerStatus = event.data;\n    let player = event.target;\n    if (playerStatus === 0) {\n      if (play) {\n        await incSong();\n        loadAndPlayCurrentSong(player);\n      }\n    }\n  }\n\n  const opts = {\n    height: \"230\",\n    width: \"400\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n\n  return (\n    store.currentList &&\n    store.currentList.songs.length > 0 && (\n      <div>\n        {\n          <div>\n            <YouTube\n              videoId={\n                play &&\n                store.currentList.songs[store.currentPlayIndex].youTubeId\n              }\n              opts={opts}\n              onReady={onPlayerReady}\n              onStateChange={onPlayerStateChange}\n            />\n            <h3>Playlist: {store.currentList.name}</h3>\n            <h3>Song #: {store.currentPlayIndex + 1}</h3>\n            <h3>\n              Title: {store.currentList.songs[store.currentPlayIndex].title}\n            </h3>\n            <h3>\n              Artist: {store.currentList.songs[store.currentPlayIndex].artist}\n            </h3>\n            <Grid container>\n              <Grid xs={2}></Grid>\n              <Grid xs={2}>\n                <SkipPreviousIcon onClick={decSong} />\n              </Grid>\n              <Grid xs={2}>\n                <StopIcon onClick={stop} />\n              </Grid>\n              <Grid xs={2}>\n                <PlayArrowIcon onClick={resume} />\n              </Grid>\n              <Grid xs={2}>\n                <SkipNextIcon onClick={incSong} />\n              </Grid>\n            </Grid>\n          </div>\n        }\n      </div>\n    )\n  );\n}\n","function Comment(props) {\n  let selectClass = \"unselected-list-card\";\n  let { comment } = props;\n  console.log(comment);\n  return (\n    <div className={selectClass}>\n      {comment.comment} - {comment.name}\n    </div>\n  );\n}\n\nexport default Comment;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Comment from \"./Comment\";\nimport { GlobalStoreContext } from \"../store\";\nimport AuthContext from \"../auth\";\nimport TextField from \"@mui/material/TextField\";\n\nfunction Comments() {\n  const { store } = useContext(GlobalStoreContext);\n  const { auth } = useContext(AuthContext);\n\n  useEffect(async () => {}, [store]);\n\n  async function handleChange(e) {\n    if (e.keyCode === 13) {\n      console.log(e.target.value);\n      await store.addComment(e.target.value);\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"all-comments\">\n        {store.currentList.comments.map((comment) => (\n          <Comment comment={comment} />\n        ))}\n      </div>\n      {auth.user !== null && store.currentList.published && (\n        <div className=\"add-comment\">\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Add a Comment\"\n            variant=\"outlined\"\n            onKeyDown={handleChange}\n            style={{ width: \"50vh\", marginTop: \"20px\" }}\n          />\n        </div>\n      )}\n      {auth.user !== null && !store.currentList.published && (\n        <div className=\"add-comment\">\n          <p>Publish your playlist so users can view</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Comments;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\nimport AuthContext from \"../auth\";\nimport ListCard from \"./ListCard.js\";\nimport MUIDeleteModal from \"./MUIDeleteModal\";\nimport MenuBar from \"./MenuBar\";\nimport AllPlaylists from \"./AllPlaylists\";\nimport UserPlaylists from \"./UserPlaylists\";\nimport YouTubePlayer from \"./YouTubePlayer\";\nimport Comments from \"./Comments\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Fab from \"@mui/material/Fab\";\nimport List from \"@mui/material/List\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\n/*\n    This React component lists all the top5 lists in the UI.\n    \n    @author McKilla Gorilla\n*/\nconst HomeScreen = () => {\n  const { store } = useContext(GlobalStoreContext);\n  const { auth } = useContext(AuthContext);\n  const [player, setPlayer] = useState(true);\n\n  useEffect(async () => {\n    await store.loadIdNamePairs();\n    //console.log(\"this is actially changing\");\n  }, [auth]);\n\n  function handlePlayerSet() {\n    setPlayer(!player);\n  }\n\n  function handleCreateNewList() {\n    store.createNewList();\n  }\n  let listCard = \"\";\n  if (store) {\n    listCard = (\n      <List sx={{ width: \"90%\", left: \"5%\", bgcolor: \"background.paper\" }}>\n        {store.idNamePairs.map((playlist) => (\n          <ListCard key={playlist._id} playlist={playlist} selected={false} />\n        ))}\n      </List>\n    );\n  }\n  let className = \"\";\n  let className2 = \"\";\n  if (player) {\n    className2 = \"no-show\";\n  } else {\n    className = \"no-show\";\n  }\n  return (\n    <div id=\"playlist-selector\">\n      <MenuBar />\n      <div className=\"all\">\n        <div className=\"left\">\n          {auth.allLists && <AllPlaylists />}\n          {auth.home && <UserPlaylists />}\n        </div>\n        {store.currentList && (\n          <div className=\"right\">\n            <Grid container className=\"right-buttons\">\n              {player && (\n                <div>\n                  <Button>Player</Button>\n                  <Button variant=\"contained\" onClick={handlePlayerSet}>\n                    Comments\n                  </Button>\n                </div>\n              )}\n              {!player && (\n                <div>\n                  <Button variant=\"contained\" onClick={handlePlayerSet}>\n                    Player\n                  </Button>\n                  <Button>Comments</Button>\n                </div>\n              )}\n            </Grid>\n            <div className={className}>\n              <YouTubePlayer />\n            </div>\n            <div className={className2}>\n              <Comments />\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/*<div id=\"list-selector-heading\">\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          id=\"add-list-button\"\n          onClick={handleCreateNewList}\n        >\n          <AddIcon />\n        </Fab>\n\n        <Typography variant=\"h2\">Your Lists</Typography>\n      </div>\n      <div id=\"list-selector-list\">\n        {listCard}\n        <MUIDeleteModal />\n  </div>*/}\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","import { useContext } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport AuthContext from \"../auth\";\nimport Grid from \"@mui/material/Grid\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SplashScreen() {\n  const { auth } = useContext(AuthContext);\n  const history = useHistory();\n\n  function handleGuest() {\n    auth.continueAsGuest();\n  }\n\n  function handleSignIn() {\n    history.push(\"/login\");\n  }\n\n  function handleSignUp() {\n    history.push(\"/register\");\n  }\n\n  return (\n    <div\n      id=\"splash-screen\"\n      style={{ background: \"linear-gradient(#FFFFF7, #008080)\" }}\n    >\n      <h4>Welcome to Playlister</h4>\n      <p className=\"description\">\n        Playlister allows you to listen through any published playlist from\n        around the world. Create a FREE account today and publish your own\n        playlists, while also commenting and liking other playlists.\n      </p>\n      <p className=\"description\">Created by Rahul Raja</p>\n      <Grid container>\n        <Grid xs={3}></Grid>\n        <Grid xs={2.5}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={handleGuest}\n            className=\"login-button\"\n          >\n            Continue As Guest\n          </Button>\n        </Grid>\n        <Grid xs={2}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={handleSignIn}\n            className=\"login-button\"\n          >\n            Sign In\n          </Button>\n        </Grid>\n        <Grid xs={2}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={handleSignUp}\n            className=\"login-button\"\n          >\n            Sign Up\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { useContext } from 'react'\nimport HomeScreen from './HomeScreen'\nimport SplashScreen from './SplashScreen'\nimport AuthContext from '../auth'\n\nexport default function HomeWrapper() {\n    const { auth } = useContext(AuthContext);\n    console.log(\"HomeWrapper auth.loggedIn: \" + auth.loggedIn);\n    \n    if (auth.loggedIn)\n        return <HomeScreen />\n    else\n        return <SplashScreen />\n}","import Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\n\nexport default function Copyright(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"/\">\n                Playlister\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}","import { useContext, useEffect } from \"react\";\nimport AuthContext from \"../auth\";\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { Modal, Alert, Button } from \"@mui/material\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function MUIMessageError() {\n  const { auth, error } = useContext(AuthContext);\n\n  useEffect(() => {}, [auth, error]);\n\n  const hideModal = () => {\n    auth.hideErrorModal();\n  };\n\n  return (\n    <Modal open={auth.e}>\n      <Box sx={style}>\n        <Alert open={auth.e} severity=\"warning\">\n          {auth.message}\n        </Alert>\n        <Button\n          id=\"dialog-yes-button\"\n          className=\"modal-button\"\n          onClick={hideModal}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Confirm\n        </Button>\n      </Box>\n    </Modal>\n  );\n}\n","import { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../auth\";\n\nimport Copyright from \"./Copyright\";\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Paper from \"@mui/material/Paper\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport MUIMessageError from \"./MUIMessageError\";\n\nexport default function LoginScreen() {\n  const { auth } = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    auth.loginUser(formData.get(\"email\"), formData.get(\"password\"));\n  };\n\n  const handleClickLink = (event) => {\n    history.push(\"/register\");\n  };\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n      <CssBaseline />\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={7}\n        sx={{\n          backgroundImage: \"url(https://source.unsplash.com/random)\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link onClick={handleClickLink} variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Copyright sx={{ mt: 5 }} />\n          </Box>\n        </Box>\n      </Grid>\n      <MUIMessageError />\n    </Grid>\n  );\n}\n","import { useContext } from \"react\";\nimport AuthContext from \"../auth\";\nimport Copyright from \"./Copyright\";\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport MUIMessageError from \"./MUIMessageError\";\n\nexport default function RegisterScreen() {\n  const { auth } = useContext(AuthContext);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    auth.registerUser(\n      formData.get(\"username\"),\n      formData.get(\"firstName\"),\n      formData.get(\"lastName\"),\n      formData.get(\"email\"),\n      formData.get(\"password\"),\n      formData.get(\"passwordVerify\")\n    );\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"passwordVerify\"\n                label=\"Password Verify\"\n                type=\"password\"\n                id=\"passwordVerify\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n      <Copyright sx={{ mt: 5 }} />\n      <MUIMessageError />\n    </Container>\n  );\n}\n","import { useContext } from \"react\";\nimport { GlobalStoreContext } from \"../store\";\nimport AuthContext from \"../auth\";\nimport { Typography } from \"@mui/material\";\n\n/*\n    Our Status bar React component goes at the bottom of our UI.\n    \n    @author McKilla Gorilla\n*/\nfunction Statusbar() {\n  const { store } = useContext(GlobalStoreContext);\n  const { auth } = useContext(AuthContext);\n\n  let text = \"\";\n  if (auth.loggedIn) {\n    if (store.currentList) text = store.currentList.name;\n  }\n\n  return <div></div>;\n}\n\nexport default Statusbar;\n","import { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SongCard from \"./SongCard.js\";\nimport MUIEditSongModal from \"./MUIEditSongModal\";\nimport MUIRemoveSongModal from \"./MUIRemoveSongModal\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport { GlobalStoreContext } from \"../store/index.js\";\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\nfunction WorkspaceScreen() {\n  const { store } = useContext(GlobalStoreContext);\n  store.history = useHistory();\n\n  const handleKeyDown = async (event) => {\n    if (event.keyCode === 90 && event.ctrlKey) {\n      let res = await store.canUndo();\n      if (res) await store.undo();\n    }\n\n    if (event.keyCode === 89 && event.ctrlKey) {\n      let res = await store.canRedo();\n      if (res) await store.redo();\n    }\n  };\n\n  let modalJSX = \"\";\n  if (store.isEditSongModalOpen()) {\n    modalJSX = <MUIEditSongModal />;\n  } else if (store.isRemoveSongModalOpen()) {\n    modalJSX = <MUIRemoveSongModal />;\n  }\n  console.log(store);\n  return (\n    <Box onKeyDown={handleKeyDown} tabIndex=\"0\">\n      <List\n        id=\"playlist-cards\"\n        sx={{ width: \"100%\", bgcolor: \"background.paper\" }}\n      >\n        {store.currentList &&\n          store.currentList.songs.map((song, index) => (\n            <SongCard\n              id={\"playlist-song-\" + index}\n              key={\"playlist-song-\" + index}\n              index={index}\n              song={song}\n            />\n          ))}\n      </List>\n      {modalJSX}\n    </Box>\n  );\n}\n\nexport default WorkspaceScreen;\n","import \"./App.css\";\nimport { React, useContext } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { AuthContextProvider } from \"./auth\";\nimport { GlobalStoreContextProvider } from \"./store\";\nimport {\n  AppBanner,\n  HomeWrapper,\n  LoginScreen,\n  RegisterScreen,\n  Statusbar,\n  WorkspaceScreen,\n} from \"./components\";\nimport { GlobalStoreContext } from \"./store\";\n/*\n    This is our application's top-level component.\n    \n    @author McKilla Gorilla\n*/\n/*\n  This is the entry-point for our application. Notice that we\n  inject our store into all the components in our application.\n  \n  @author McKilla Gorilla\n*/\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <AuthContextProvider>\n        <GlobalStoreContextProvider>\n          <AppBanner />\n          <Switch>\n            <Route path=\"/\" exact component={HomeWrapper} />\n            <Route path=\"/login/\" exact component={LoginScreen} />\n            <Route path=\"/register/\" exact component={RegisterScreen} />\n            <Route path=\"/playlist/:id\" exact component={WorkspaceScreen} />\n          </Switch>\n          <Statusbar />\n        </GlobalStoreContextProvider>\n      </AuthContextProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n/*\n  This is the entry-point for our application. Notice that we\n  inject our store into all the components in our application.\n  \n  @author McKilla Gorilla\n*/\n\nReactDOM.render(\n  <React.StrictMode>  \n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}